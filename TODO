
* different domain lengths and resolutions
  > Visualization, DONE
  > Steady state test, DONE

* check coriolis f term (no dimensionalization should be required)
  (partly done, f term has to be scaled with the domain length in each direction)
  DONE

* Stabilize rotated f-plane (gets instabilities)
  Cannot work due to missing symmetries
  DONE

* Check scaling of f
  DONE, works

* Implement RKn
  DONE
  
* FFT: Get running for resx != resy
  DONE

* Implement spectral derivative
  DONE

* Get it running with g++-4.7
  DONE

* Implement advection test for Gaussian curve
  > Tests with higher-order time stepping
  > Tests with increased resolution
  DONE

* Write interface for setting spectral values
  DONE

* Write tests for testing spectral values:
  Tests by setting one frequency and testing response in Cartesian space
  DONE, spectral_visualization.cpp

* Check scalup/scaledown in operator*, since this creates invalid
  memory access
  DONE

* Implement NEMO-like model

* Add Williamson test benches:
	1) Advection
	2) Balances
	5) Mountain
	6) Rot. shallow water

* Optimize stencil computations on Cartesian grids for performance benchmarks
  DONE (partially)

* Implement cache blocking for performance benchmarks

* Think about moving "#omp parallel" to higher recursive level
  Question: How to keep this transparent to the SWEET user?!?

