(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    275640,       5694]
NotebookOptionsPosition[    270174,       5531]
NotebookOutlinePosition[    270713,       5550]
CellTagsIndexPosition[    270670,       5547]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reduction alg, high precision", "Section",
 CellChangeTimes->{{3.523638633806774*^9, 3.523638638788698*^9}, {
  3.523906477078813*^9, 3.523906482214443*^9}}],

Cell["\<\
This computes the reduced nodes/weights in extended precision, using 60 digits\
\>", "Text",
 CellChangeTimes->{{3.558962571796658*^9, 3.5589625898429203`*^9}, {
  3.558963402037898*^9, 3.55896340596369*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"formMatrixForReductionHalfLine", "[", 
   RowBox[{"r_", ",", "b_"}], "]"}], ":=", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"Conjugate", "[", 
      RowBox[{"Sqrt", "[", "b", "]"}], "]"}], ",", 
     RowBox[{"Sqrt", "[", "b", "]"}]}], "]"}], "*", " ", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"#1", "+", " ", "#2"}], ")"}]}], "&"}], ",", 
     RowBox[{"Conjugate", "[", "r", "]"}], ",", "r"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.523902966697781*^9, 3.523902996798493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeConEigenvalue", "[", 
   RowBox[{"mat_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "matForReduction", ",", "eigenValues", ",", "eigenVectors", ",", 
      "smallEigenvalueIndex", ",", "v", ",", "error"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matForReduction", " ", "=", " ", 
      RowBox[{
       RowBox[{"Conjugate", "[", "mat", "]"}], " ", ".", " ", "mat"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eigenValues", ",", "eigenVectors"}], "}"}], " ", "=", " ", 
      RowBox[{"Eigensystem", "[", "matForReduction", " ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smallEigenvalueIndex", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "<", "tol"}], ")"}], "&"}], "/@", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"Abs", "[", "eigenValues", "]"}], "]"}]}], ",", "True", 
          ",", "1", ",", "1"}], "]"}], "//", "Flatten"}], "//", "First"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"v", " ", "=", " ", 
      RowBox[{"eigenVectors", "[", 
       RowBox[{"[", "smallEigenvalueIndex", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"matForReduction", " ", ".", " ", "v"}], "-", 
         RowBox[{
          RowBox[{"eigenValues", "[", 
           RowBox[{"[", "smallEigenvalueIndex", "]"}], "]"}], "v"}]}], "//", 
        "Abs"}], "//", "Max"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "error", ",", "v", ",", "eigenValues", ",", "smallEigenvalueIndex"}], 
      "}"}]}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findRootsRationalFuncHalfLine", "[", 
   RowBox[{"gamma0_", ",", "w0_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "r1", ",", "b1", ",", "v1", ",", "w", ",", "x", ",", "f", ",", "a", ",", 
      "delta", ",", "b", ",", "A", ",", "eigs", ",", "roots", ",", 
      "rationalFunc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"w", " ", "=", " ", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"Sqrt", "[", "w0", "]"}], "]"}], "*", 
       RowBox[{"Conjugate", "[", "v", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{"Conjugate", "[", "gamma0", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"f", "=", " ", 
        RowBox[{
         RowBox[{"w", "/", 
          RowBox[{"(", 
           RowBox[{"x", "-", "z"}], ")"}]}], "//", "Total"}]}], ";"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"a", "=", 
      RowBox[{
       RowBox[{"-", "w"}], "/", 
       RowBox[{"Total", "[", "w", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"delta", " ", "=", " ", "x"}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", " ", "=", " ", "x"}], ";", "\[IndentingNewLine]", 
     RowBox[{"A", "=", 
      RowBox[{
       RowBox[{"DiagonalMatrix", "[", "delta", "]"}], "+", " ", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", "a", ",", "b"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eigs", "=", 
      RowBox[{"Eigenvalues", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eigs", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"eigs", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "#", "]"}], ">", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "32"}], ")"}]}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"eigs", "=", 
        RowBox[{"Delete", "[", 
         RowBox[{"eigs", ",", 
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"Abs", "[", "eigs", "]"}], ",", 
            RowBox[{"Min", "[", 
             RowBox[{"Abs", "[", "eigs", "]"}], "]"}]}], "]"}]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"roots", " ", "=", 
        RowBox[{"z", "/.", 
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"SetPrecision", "[", 
               RowBox[{"f", ",", "300"}], "]"}], "//", "Together"}], "//", 
             "Numerator"}], "//", 
            RowBox[{
             RowBox[{"NSolve", "[", 
              RowBox[{"#", ",", "z"}], "]"}], "&"}]}], "//", "N"}], ")"}]}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"roots", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"roots", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}]}], "]"}], "//",
           "Sort"}], "//", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"#", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], ">", 
              RowBox[{"10", "^", 
               RowBox[{"-", "8"}]}]}], "&"}]}], "]"}], "&"}]}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "eigs"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.523905609093123*^9, 3.523905610827326*^9}, {
  3.523905671500381*^9, 3.523905680881979*^9}, {3.526668137889359*^9, 
  3.5266681407612343`*^9}, {3.548869963399251*^9, 3.548869964244142*^9}, {
  3.558962480886807*^9, 3.558962485099111*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"formMatrixForWeightsHalfLine", "[", "\[Gamma]New_", "]"}], ":=", 
  "\[IndentingNewLine]", "  ", 
  RowBox[{"Outer", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#1", "+", " ", "#2"}], ")"}], "^", "3"}]}], "&"}], ",", 
    RowBox[{"Conjugate", "[", "\[Gamma]New", "]"}], ",", "\[Gamma]New"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4956533402692137`*^9, 3.4956533426997623`*^9}, {
  3.495653393850471*^9, 3.495653395458618*^9}, {3.5239048628651543`*^9, 
  3.5239048686707077`*^9}, {3.523907522025961*^9, 3.5239075246874933`*^9}, {
  3.5589724628280697`*^9, 3.558972463809256*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"formRhsForWeightsHalfLine", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Gamma]New_", ",", "w_"}], "]"}], ":=", 
  "\[IndentingNewLine]", "  ", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#1", "+", " ", "#2"}], ")"}], "^", "3"}]}], "&"}], ",", 
     RowBox[{"Conjugate", "[", "\[Gamma]New", "]"}], ",", "\[Gamma]"}], "]"}],
    " ", ".", " ", "w"}]}]], "Input",
 CellChangeTimes->{{3.4956533452214746`*^9, 3.4956533473882313`*^9}, {
  3.5239048771131077`*^9, 3.523904888982005*^9}, {3.523905091242659*^9, 
  3.523905139481915*^9}, {3.558972466066114*^9, 3.558972467233603*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveForWeightsHalfLine", "[", 
   RowBox[{"\[Gamma]_", ",", "\[Gamma]New_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrixForWeights", ",", "rhsForWeights"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matrixForWeights", "=", 
      RowBox[{"formMatrixForWeightsHalfLine", "[", "\[Gamma]New", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rhsForWeights", " ", "=", " ", 
      RowBox[{"formRhsForWeightsHalfLine", "[", 
       RowBox[{"\[Gamma]", ",", "\[Gamma]New", ",", "w"}], "]"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"matrixForWeights", ",", "rhsForWeights"}], "]"}]}]}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeExpReductionHalfLine", "[", 
   RowBox[{"gamma_", ",", "w_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "wH", ",", "gammaH", ",", "matrixForReduction", " ", ",", "v", ",", 
      "rationalFunc", ",", "newNodes", ",", "newWeights", ",", "dataNew", ",",
       "dataOld", ",", "error", ",", "eigenValues", ",", 
      "smallEigenvalueIndex"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wH", ",", "gammaH"}], "}"}], "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"w", ",", "gamma"}], "}"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "60"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"matrixForReduction", " ", "=", " ", 
      RowBox[{"formMatrixForReductionHalfLine", "[", 
       RowBox[{"gammaH", ",", "wH"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "error", ",", "v", ",", "eigenValues", ",", "smallEigenvalueIndex"}], 
       "}"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"computeConEigenvalue", "[", 
        RowBox[{"matrixForReduction", ",", "tol"}], "]"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "60"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newNodes", "=", 
      RowBox[{"findRootsRationalFuncHalfLine", "[", 
       RowBox[{"gammaH", ",", "wH", ",", "v"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newWeights", "=", 
      RowBox[{"solveForWeightsHalfLine", "[", 
       RowBox[{"gammaH", ",", "newNodes", ",", "wH"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newNodes", ",", "newWeights"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.523905008183663*^9, 3.523905061571034*^9}, {
  3.523905147472843*^9, 3.5239051588877573`*^9}, {3.52390519093719*^9, 
  3.523905226804619*^9}, {3.523905728712413*^9, 3.523905730117828*^9}, {
  3.523905801421751*^9, 3.5239058042420597`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["code for sampling and using Hankel formulation for reduction", "Section",
 CellChangeTimes->{{3.455900501805498*^9, 3.455900536076294*^9}, 
   3.495317437442156*^9, 3.58000780224582*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeSingularValueDecomp", "[", 
   RowBox[{"mat_", ",", "tol_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "U", ",", "V", ",", "W", ",", "singularValues", ",", 
      "smallSingValueIndex", ",", "smallSingValue", ",", "v"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"U", ",", "W", ",", "V"}], "}"}], "=", " ", 
      RowBox[{"SingularValueDecomposition", "[", "mat", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"singularValues", " ", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"W", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "W", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"smallSingValue", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"singularValues", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "#", "]"}], "<", "tol"}], "&"}], ",", "1"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"smallSingValueIndex", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "<", "tol"}], ")"}], "&"}], "/@", 
           "singularValues"}], ",", "True", ",", "1", ",", "1"}], "]"}], "//",
         "Flatten"}], "//", "First"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", " ", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"Conjugate", "[", "U", "]"}], "]"}], "[", 
       RowBox[{"[", "smallSingValueIndex", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "smallSingValueIndex", ",", "smallSingValue", " ", ",", "v", ",", 
       "singularValues"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.495317437443048*^9, 3.580007802247755*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeRootsFromEigenVec", "[", "u_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "polynomialForRoots0", ",", "rulesForNodes0", " ", ",", "nodes0", ",", 
      "error0", ",", "accurateNodes0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"polynomialForRoots0", " ", "=", " ", 
      RowBox[{
       RowBox[{"u", "*", 
        RowBox[{"z", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "u", "]"}], "]"}], "-", "1"}], ")"}]}]}], "//",
        "Total"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rulesForNodes0", " ", "=", " ", 
      RowBox[{"NSolve", "[", 
       RowBox[{"polynomialForRoots0", ",", "z"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodes0", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rulesForNodes0", "//", "Flatten"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"z", "\[Rule]", "stuff_"}], ")"}], "\[Rule]", "stuff"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"error0", "=", 
      RowBox[{"polynomialForRoots0", "/.", "rulesForNodes0"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"error0", ",", "nodes0"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.45590069124928*^9, {3.461439585157558*^9, 3.461439590423008*^9}, {
   3.461439622830299*^9, 3.461439627794272*^9}, 3.495317437444995*^9, 
   3.496370843099028*^9, 3.580007802250284*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveForWeights", "[", 
   RowBox[{"nodes_", ",", "sampledFunc_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrixForWeights0", ",", "V0", ",", "rhsForWeights0"}], " ", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matrixForWeights0", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"#", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "*", "M"}], "+", "1"}], ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "#"}], ")"}]}], "&"}], "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"Times", ",", 
         RowBox[{"Conjugate", "[", "nodes", " ", "]"}], ",", "nodes"}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V0", " ", "=", " ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", 
           RowBox[{"Prepend", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"2", "*", "M"}], "]"}], ",", "0"}], "]"}]}], "&"}], ",",
          "nodes"}], "]"}], "//", "Conjugate"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rhsForWeights0", " ", "=", " ", 
      RowBox[{"V0", " ", ".", " ", "sampledFunc"}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"LinearSolve", "[", 
      RowBox[{"matrixForWeights0", ",", "rhsForWeights0"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.495317437446908*^9, 3.580007802252808*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeExpApproximationUsingHankel", "[", 
   RowBox[{"data_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "M", ",", "hankel", ",", "v", ",", "nodesSmall", ",", "error", ",", 
      "nodes", ",", "weights", ",", "expApproxOfData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"M", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "data", "]"}], "-", "1"}], ")"}], "/", 
       "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"hankel", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "j", "+", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "M"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "M"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{
       RowBox[{"computeSingularValueDecomp", "[", 
        RowBox[{"hankel", ",", "tol"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nodes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"computeRootsFromEigenVec", "[", "v", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", " ", "=", " ", 
      RowBox[{
       RowBox[{"solveForWeights", "[", 
        RowBox[{"nodes", ",", "data", ",", "M"}], "]"}], "//", "Chop"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"expApproxOfData", " ", "=", " ", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"weights", " ", 
            RowBox[{"nodes", "^", "#"}]}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"2", "*", "M"}], "+", "1"}], ",", "0"}], "]"}], "//", 
       "Chop"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", 
      RowBox[{"data", "-", "expApproxOfData"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"{", 
      RowBox[{"nodes", ",", "weights", ",", "error"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.455913832413146*^9, 3.495317437449135*^9, 
  3.5800078022561617`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeExpApproximationUsingHankel", "[", 
   RowBox[{"r_", ",", "b_", ",", "M_", ",", "tol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "hankel", ",", "v", ",", "nodesSmall", ",", "error", ",", 
      "nodes", ",", "weights", ",", "expApproxOfData"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"b", " ", 
          RowBox[{"r", "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{
           RowBox[{"2", "*", "M"}], "+", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"hankel", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "j", "+", "1"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "M"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "M"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{
       RowBox[{"computeSingularValueDecomp", "[", 
        RowBox[{"hankel", ",", "tol"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nodes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"computeRootsFromEigenVec", "[", "v", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "#", "]"}], "<", "1"}], "&"}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"weights", " ", "=", " ", 
      RowBox[{
       RowBox[{"solveForWeights", "[", 
        RowBox[{"nodes", ",", "data", ",", "M"}], "]"}], "//", "Chop"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"expApproxOfData", " ", "=", " ", 
      RowBox[{
       RowBox[{"Array", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"weights", " ", 
            RowBox[{"nodes", "^", "#"}]}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{"2", "*", "M"}], "+", "1"}], ",", "0"}], "]"}], "//", 
       "Chop"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"error", " ", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"data", "-", "expApproxOfData"}], "//", "Abs"}], "//", 
       "Max"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"nodes", ",", "weights", ",", "error"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.496597523552218*^9, 3.496597528927012*^9}, {
   3.49659757913374*^9, 3.496597625791741*^9}, {3.496597835253201*^9, 
   3.496597854875102*^9}, {3.496598011847825*^9, 3.4965980310983143`*^9}, {
   3.496598115253881*^9, 3.496598116715102*^9}, 3.580007802259726*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LInfinitySolve", "[", 
   RowBox[{"A_", ",", "b_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "m", ",", "n", ",", "Aall", ",", "ball", ",", "c", ",", "x", ",", "bds", 
      ",", "onesT"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "n"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"onesT", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"Table", "[", 
        RowBox[{"1", ",", 
         RowBox[{"{", "m", "}"}]}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Aall", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"onesT", ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"-", "A"}], "]"}]}], "]"}], "]"}], ",", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"onesT", ",", 
           RowBox[{"Transpose", "[", "A", "]"}]}], "]"}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ball", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"-", "b"}], ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"bds", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", "+", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"x", " ", "=", " ", 
      RowBox[{"LinearProgramming", "[", 
       RowBox[{"c", ",", "Aall", ",", "ball", ",", "bds"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Take", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "n"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690784684216066*^9, 3.690784703235214*^9}, {
   3.690784733901185*^9, 3.6907847363467216`*^9}, {3.690784917031164*^9, 
   3.690784919011579*^9}, {3.690784960389382*^9, 3.6907849691571198`*^9}, 
   3.690785446690505*^9, 3.690785619843729*^9, {3.690786829226836*^9, 
   3.690786833953946*^9}, {3.6907869815362883`*^9, 3.690786981717594*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpAtom", "[", 
   RowBox[{"d_", ",", "n_", ",", "x_"}], "]"}], ":=", " ", 
  RowBox[{"SetPrecision", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"LaguerreL", "[", 
      RowBox[{"n", ",", 
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"x", ",", "60"}], "]"}], "^", "2"}]}], "]"}], " ", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"Pi", ",", "60"}], "]"}], " ", "d"}], "]"}]}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "d"}], "]"}]}], ",", "60"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.580167102429406*^9, 3.580167103998369*^9}, {
  3.580226242410429*^9, 3.580226331694996*^9}, {3.5802372864994783`*^9, 
  3.580237286931458*^9}, {3.690788783156123*^9, 3.690788804102783*^9}, {
  3.690788839466031*^9, 3.690788848823492*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Computation of Gaussian approximation of ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 " in the paper"
}], "Section",
 CellChangeTimes->{{3.647447660053548*^9, 3.6474476687641478`*^9}, {
  3.647447942944708*^9, 3.6474479496556053`*^9}}],

Cell[TextData[{
 "Compute (near) optional rational approximation of the Gaussian ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 "; note that there is an additional step to get the imaginary part of the \
poles to be aligned with the integers"
}], "Text",
 CellChangeTimes->{{3.647447709317878*^9, 3.647447741986987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"d0", " ", "=", " ", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.647451227314597*^9, 3.647451228870925*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gaussian", " ", "=", " ", 
  RowBox[{"interpAtom", "[", 
   RowBox[{"d0", ",", "0", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfeK+rdy+Na8cV1x6AqaPZVo6HALSf97bgumnrjtD
QbTaSc9IEK27uC0NROe87gTTz+z2LgXRSh/2gekT/612g+iImk9g+takiqMg
mid7Lpg+k58h8xxISy3dAqb/Zk7+9AVIR0XNB9Mrds5I+QqkL/2fA6YPKVRn
c6995ehR2wSmJcNZO0B03zl+MJ2k3/LeDUjLbVgBpj9rfz17BEgXMv4C06v9
r209CqQrPmXuAtF36mYcANE5PbPB9I76H8dBdNmU/2D66eHqZ191Xjv+EJ8L
pg8cuc39DUjnrvoEpgGao7dG
  "]],

Cell[BoxData[
 RowBox[{"0.\
28209479177387814347403972578038629292202531466449942842204286085532123422074`\
60.", " ", 
  SuperscriptBox[
   "2.718281828459045235360287471352662497757247093699959574966967627724076630\
35355`60.", 
   RowBox[{
    RowBox[{"-", "0.25`60."}], " ", 
    SuperscriptBox["x", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
   3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
   3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
   3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
   3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
   3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
   3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
   3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
   3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
   3.6474476703124943`*^9, {3.647450925943194*^9, 3.647450933283752*^9}, {
   3.647451220641821*^9, 3.6474512321081533`*^9}, 3.647451489687099*^9, 
   3.647451858631617*^9, 3.647451943712669*^9, 3.690776326553338*^9, 
   3.690776430756521*^9, 3.690777419676983*^9, 3.690777471234482*^9, 
   3.6907775678548326`*^9, 3.690777823950136*^9, 3.690778015603654*^9, 
   3.690778397732376*^9, 3.6907799323573427`*^9, {3.690779964128381*^9, 
   3.690779988382971*^9}, 3.690780168292556*^9, 3.69078193391678*^9, 
   3.6907832007823057`*^9, 3.690783364234066*^9, 3.690783499565386*^9, 
   3.690783731942892*^9, 3.6907841144352913`*^9, 3.690787661159416*^9, 
   3.690787816221239*^9, 3.690787861985139*^9, 3.6907879001394053`*^9, 
   3.690787938257018*^9, 3.690787971334305*^9, 3.690788015077334*^9, 
   3.69078807662563*^9, {3.690788159340288*^9, 3.690788177393134*^9}, 
   3.690788665816299*^9, {3.690788808706606*^9, 3.690788815011209*^9}, 
   3.6907888571922607`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gaussianFT", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"gaussian", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "k", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Precision", "[", "gaussianFT", "]"}]}], "Input",
 CellChangeTimes->{{3.580226947196954*^9, 3.580226949131311*^9}, {
   3.580227047436116*^9, 3.580227047520937*^9}, {3.580227219820137*^9, 
   3.5802272217152243`*^9}, {3.5802273924805613`*^9, 3.580227392774317*^9}, 
   3.58022783935522*^9, {3.6474509392096233`*^9, 3.647450941440402*^9}, {
   3.690783214891033*^9, 3.690783218717527*^9}}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{
  3.690783219830567*^9, 3.690783364521213*^9, 3.690783499849577*^9, 
   3.6907837333694468`*^9, 3.690784116025957*^9, 3.690787662589201*^9, 
   3.690787816500054*^9, 3.690787862264969*^9, 3.6907879004235353`*^9, 
   3.6907879386237707`*^9, 3.69078797161255*^9, 3.690788015393627*^9, 
   3.6907880769046097`*^9, {3.69078815961467*^9, 3.690788177684737*^9}, 
   3.6907886661951647`*^9, 3.6907888176589212`*^9, 3.6907888725534077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pts", " ", "=", " ", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"R", " ", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"2", "*", "M"}], "-", "1"}]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "M"}], ")"}]}]}], ",", "60"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fVals", " ", "=", " ", 
    RowBox[{"SetPrecision", "[", 
     RowBox[{
      RowBox[{"gaussianFT", "/.", 
       RowBox[{"k", "\[Rule]", "pts"}]}], ",", "120"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "THIS", " ", "IS", " ", "THE", " ", "PART", " ", "WHERE", " ", "WE", " ", 
     "SET", " ", "THE", " ", "TOLERANCE"}], ",", " ", 
    RowBox[{
    "SMALLER", " ", "TOLERANCE", " ", "REQUIRES", " ", "MORE", " ", 
     "POLES"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tol", " ", "=", " ", 
   RowBox[{"10", "^", 
    RowBox[{"-", "22"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nodes", ",", "weights", ",", "error"}], "}"}], " ", "=", " ", 
   RowBox[{"computeExpApproximationUsingHankel", "[", 
    RowBox[{"fVals", ",", "tol"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphasAtom", " ", "=", "  ", 
   RowBox[{
    RowBox[{"2", " ", "M", " ", 
     RowBox[{
      RowBox[{"Log", "[", "nodes", "]"}], "/", "R"}]}], "//", "Conjugate"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weightsAtom", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"SetPrecision", "[", 
         RowBox[{"Pi", ",", "60"}], "]"}]}], ")"}]}], " ", "weights"}], "//", 
    "Conjugate"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Precision", "[", "tol", "]"}]}], "Input",
 CellChangeTimes->{{3.5800658544058533`*^9, 3.580065858396291*^9}, {
   3.5800658929479837`*^9, 3.5800659358023148`*^9}, {3.580066657825819*^9, 
   3.58006665851033*^9}, {3.580066695590825*^9, 3.580066695670491*^9}, {
   3.580066845219043*^9, 3.58006684655259*^9}, {3.5800681242045593`*^9, 
   3.580068130139452*^9}, {3.58022638201721*^9, 3.580226383401045*^9}, {
   3.5802264910800257`*^9, 3.5802264911656713`*^9}, 3.5802267257457542`*^9, {
   3.5802269090078793`*^9, 3.580226909478015*^9}, {3.580227134740396*^9, 
   3.5802272161330023`*^9}, 3.580227252344994*^9, {3.580227350669067*^9, 
   3.5802273685735083`*^9}, {3.580228888727084*^9, 3.580228888845591*^9}, {
   3.5802361598593073`*^9, 3.5802361675533524`*^9}, {3.580236486537176*^9, 
   3.580236487131826*^9}, {3.580237774803232*^9, 3.580237775748872*^9}, {
   3.5803118115487413`*^9, 3.5803118118465347`*^9}, {3.580340624773662*^9, 
   3.5803406248573227`*^9}, {3.580340721787525*^9, 3.580340722661118*^9}, {
   3.580340786295217*^9, 3.580340787188286*^9}, {3.580341048751506*^9, 
   3.580341049071497*^9}, {3.580341107125587*^9, 3.580341120602952*^9}, {
   3.5803861682348824`*^9, 3.580386168695654*^9}, 3.580386246000107*^9, {
   3.580386316190041*^9, 3.5803863165938473`*^9}, {3.580765835433104*^9, 
   3.580765835821508*^9}, {3.580765995263557*^9, 3.580765995376071*^9}, {
   3.580766230281556*^9, 3.5807662307077417`*^9}, {3.5807670866378517`*^9, 
   3.580767092376787*^9}, {3.580767212104329*^9, 3.5807672124268923`*^9}, {
   3.580767269918116*^9, 3.580767270000525*^9}, {3.580767667133553*^9, 
   3.580767695826086*^9}, 3.647450955240265*^9, {3.6907798708806963`*^9, 
   3.690779872444786*^9}, {3.69077992010651*^9, 3.690779920239231*^9}, {
   3.690779954066538*^9, 3.6907799818390627`*^9}, {3.690780066959797*^9, 
   3.69078006995839*^9}, {3.6907801174475927`*^9, 3.690780145101946*^9}, 
   3.6907814344998617`*^9, 3.690781763073393*^9, 3.690781876896412*^9, {
   3.6907819251319923`*^9, 3.6907820694907503`*^9}, {3.6907821302282467`*^9, 
   3.690782170849266*^9}, {3.69078233105407*^9, 3.690782362415276*^9}, {
   3.6907824499570932`*^9, 3.690782501721035*^9}, {3.690782641847355*^9, 
   3.690782676997745*^9}, {3.690782721170287*^9, 3.690782780687275*^9}, {
   3.6907828402227383`*^9, 3.6907828545161963`*^9}, {3.6907828900834713`*^9, 
   3.690782891004725*^9}, {3.690783118176255*^9, 3.6907831233848124`*^9}, 
   3.69078324996548*^9, {3.6907833363264217`*^9, 3.6907833550048656`*^9}, 
   3.690783496136118*^9, {3.690787804587707*^9, 3.690787813984405*^9}, 
   3.690787854806691*^9, 3.6907878960228577`*^9, 3.690787929975121*^9, 
   3.6907879675374804`*^9, {3.690788004391365*^9, 3.69078801055365*^9}, {
   3.6907880634409*^9, 3.690788071847054*^9}, {3.690788115822378*^9, 
   3.6907881318075857`*^9}, {3.690788560116858*^9, 3.690788560969624*^9}, {
   3.6907887146076527`*^9, 3.6907887147540817`*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{
  3.69078252045514*^9, 3.690782580961467*^9, 3.6907826492379827`*^9, {
   3.690782680380628*^9, 3.690782702529848*^9}, {3.69078274166398*^9, 
   3.690782760026325*^9}, {3.690782873742157*^9, 3.690782896108766*^9}, 
   3.690783132662652*^9, 3.690783225350327*^9, 3.6907832598531027`*^9, {
   3.6907833378324203`*^9, 3.690783367295291*^9}, 3.6907835025441713`*^9, 
   3.6907837374904947`*^9, 3.690784120122513*^9, 3.690787666432165*^9, 
   3.690787819659912*^9, 3.690787865041601*^9, 3.6907879032711267`*^9, 
   3.690787941448804*^9, 3.690787974412169*^9, 3.69078801824151*^9, 
   3.690788095230582*^9, {3.690788162398266*^9, 3.690788180483889*^9}, 
   3.690788669117087*^9, 3.690788721424654*^9, 3.690788822379581*^9, {
   3.69078888882045*^9, 3.690788892255474*^9}}]
}, Open  ]],

Cell[TextData[{
 "Plot the error in the rational approximation of the Gaussian ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}]
}], "Text",
 CellChangeTimes->{{3.647447689589287*^9, 3.6474477020182333`*^9}, {
   3.647447757381822*^9, 3.647447779685337*^9}, 3.690780053735486*^9}],

Cell["weights\[LineSeparator]", "Text",
 CellChangeTimes->{{3.647447689589287*^9, 3.6474477020182333`*^9}, {
  3.647447757381822*^9, 3.647447779685337*^9}, {3.6907800561496773`*^9, 
  3.6907800587801447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rationalFuncExpr", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"weightsAtom", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"I", " ", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{"x", ",", "60"}], "]"}]}], " ", "+", " ", "alphasAtom"}], 
       ")"}]}], "]"}], "//", "Re"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"rationalFuncExpr", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5802271177737017`*^9, 3.5802271249983397`*^9}, 
   3.580227192300585*^9, {3.6907829069901133`*^9, 3.690782910662054*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$227052#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.690779991584762*^9, 3.6907801712979193`*^9, 3.690782658368492*^9, 
   3.69078270518744*^9, {3.690782744078964*^9, 3.6907827622736063`*^9}, 
   3.690782876608782*^9, 3.690782911299741*^9, 3.6907832254201937`*^9, 
   3.69078336735783*^9, 3.690783502608552*^9, 3.690783737617879*^9, 
   3.6907841202169228`*^9, 3.69078766686279*^9, 3.6907878197351513`*^9, 
   3.6907878651141663`*^9, 3.6907879033342113`*^9, 3.690787941528549*^9, 
   3.6907879744832697`*^9, 3.6907880183134813`*^9, 3.690788095294277*^9, {
   3.690788162472639*^9, 3.6907881805638313`*^9}, 3.690788669341202*^9, 
   3.690788721657053*^9, 3.6907888224895372`*^9, 3.690788892328341*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690779985786448*^9, 3.6907799861825533`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690779928519302*^9, 3.690779928803116*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rationalFuncExpr", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"weightsAtom", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"I", "  ", 
         RowBox[{"SetPrecision", "[", 
          RowBox[{"x", ",", "60"}], "]"}]}], " ", "+", " ", "alphasAtom"}], 
       ")"}]}], "]"}], "//", "Re"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotRationalApproxGaussianOpt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rationalFuncExpr", "-", "gaussian"}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "25"}], ",", "25"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.580065844252914*^9, 3.580065847689831*^9}, {
   3.5800659616229877`*^9, 3.580065985902066*^9}, {3.580066318573935*^9, 
   3.580066390026857*^9}, {3.580067651840119*^9, 3.580067708253049*^9}, {
   3.5800677814181833`*^9, 3.580067799292303*^9}, {3.5800681172387342`*^9, 
   3.580068119827918*^9}, {3.580164353212467*^9, 3.5801643581590357`*^9}, {
   3.580164530254126*^9, 3.5801645330572777`*^9}, 3.580226441338077*^9, {
   3.580226683672583*^9, 3.580226685943727*^9}, {3.5802270125361013`*^9, 
   3.580227028516922*^9}, {3.5802270587244997`*^9, 3.580227058836296*^9}, {
   3.580227201866849*^9, 3.5802272033595953`*^9}, {3.580227242366836*^9, 
   3.580227243342577*^9}, {3.5802274078097*^9, 3.580227408081622*^9}, 
   3.5802278681964073`*^9, {3.580767106988598*^9, 3.580767108794219*^9}, {
   3.582908843555999*^9, 3.582908852152141*^9}, {3.647447751401204*^9, 
   3.64744775326478*^9}, {3.6474512460602493`*^9, 3.647451247039728*^9}, {
   3.690782917269476*^9, 3.690782962526775*^9}, 3.690788974194373*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$227236#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.5800659548951197`*^9, 3.580065986146734*^9}, {
   3.580066329773226*^9, 3.580066333261252*^9}, 3.580066390187725*^9, {
   3.5800666549511013`*^9, 3.580066691677856*^9}, {3.580066749193459*^9, 
   3.580066766565226*^9}, 3.5800668547086554`*^9, {3.580067668334065*^9, 
   3.5800677091033697`*^9}, 3.5800677996665697`*^9, 3.58006813682703*^9, 
   3.580068204957555*^9, 3.5800968765004463`*^9, 3.5801642357340517`*^9, 
   3.5801643588865128`*^9, 3.580164534317111*^9, {3.58022642449236*^9, 
   3.5802264420720177`*^9}, 3.580226674582407*^9, {3.5802268955446253`*^9, 
   3.580226915494379*^9}, 3.5802269568497143`*^9, {3.5802270147999153`*^9, 
   3.5802270591651*^9}, {3.580227198335763*^9, 3.580227203703246*^9}, 
   3.580227244028145*^9, {3.580227361025462*^9, 3.580227373068769*^9}, {
   3.580227403856702*^9, 3.580227408392983*^9}, 3.5802278690091763`*^9, 
   3.580228898189942*^9, 3.580236201175633*^9, 3.580236330169058*^9, 
   3.58023653719867*^9, 3.5802366309221563`*^9, 3.580237132566592*^9, 
   3.580237336416739*^9, 3.5802373795444107`*^9, 3.5802377926857147`*^9, {
   3.5803117995226107`*^9, 3.58031182634409*^9}, 3.580340137686039*^9, 
   3.5803406401229057`*^9, 3.58034073915814*^9, 3.5803407997670193`*^9, {
   3.580341044231226*^9, 3.580341059378357*^9}, 3.5803411294770613`*^9, {
   3.580386157731174*^9, 3.580386180456604*^9}, 3.580386260153739*^9, 
   3.5803863291029263`*^9, 3.580386380318984*^9, 3.580482614906437*^9, 
   3.580500257249803*^9, 3.580508044474957*^9, {3.580765831425638*^9, 
   3.580765851742239*^9}, 3.580766022051759*^9, 3.5807662399095097`*^9, {
   3.580767102645794*^9, 3.580767109089888*^9}, 3.580767224492324*^9, 
   3.58076727699251*^9, {3.58076767617015*^9, 3.5807677096414003`*^9}, 
   3.580767758534363*^9, 3.580767816106577*^9, 3.58185776316986*^9, 
   3.581877379223929*^9, 3.582645419695396*^9, 3.582829416652647*^9, 
   3.5829081098602037`*^9, {3.5829088399621277`*^9, 3.582908853068543*^9}, 
   3.584278970226564*^9, 3.585508748676161*^9, 3.647447766133728*^9, 
   3.647450971922762*^9, {3.647451242752877*^9, 3.647451247564722*^9}, 
   3.6474514945001097`*^9, 3.647451863239048*^9, 3.647451948278964*^9, 
   3.6907763304272957`*^9, 3.690777423169838*^9, 3.690777474639233*^9, 
   3.69077757176836*^9, 3.6907778270305243`*^9, 3.690778018841031*^9, 
   3.6907784014499826`*^9, 3.690779935425619*^9, {3.6907799672882013`*^9, 
   3.690779991669847*^9}, 3.690780171387155*^9, 3.6907826610431423`*^9, 
   3.690782707918477*^9, {3.690782746339361*^9, 3.69078276535966*^9}, 
   3.690782878933198*^9, {3.690782918176997*^9, 3.690782965218335*^9}, 
   3.690783227889305*^9, 3.6907833674822893`*^9, 3.6907835026860533`*^9, 
   3.6907837391192093`*^9, 3.690784120732026*^9, 3.690787668696671*^9, 
   3.6907878198268414`*^9, 3.690787865235787*^9, 3.690787903451317*^9, 
   3.6907879416231747`*^9, 3.690787974574007*^9, 3.690788018386743*^9, 
   3.690788095413344*^9, {3.690788162607484*^9, 3.690788180706614*^9}, 
   3.6907886694970093`*^9, 3.690788722869863*^9, 3.69078882301615*^9, 
   3.690788892670601*^9, {3.690788950311898*^9, 
   3.690788979820985*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXd4VNmSJ5hPFijKPNvT73W/fb0937yd6e3t2e35Z2Z7/tidefO2Z/rN
dO/ON9/uzC4gjDJlkRcICYT3RnhbBUVhCyNAgCgoXOEKUwZbeIFAGOGRkM/Y
E+eeODfuzZupzFSmlALl96XMNcdE/CJOnDhx4vwhpcAzIiulIG1Yym9+n5eS
40kblv+bfzcyT1yK/5HLFfcnLtePRvzGhX+Dy0U/zM+v8Qe/Es0L/1L+igdo
vAyzctyQmprqGih/xkNq1kQ4/KRdPpEgf/YH8LbB82tHYeuKWVBenAMZHg+k
Z+VByaQKWL3rNNQ0drj+k3w2EaDlLqwfnY6lgafoY6hpliUEXc7WCJXzt1Ho
4/9iI1/rA9hZluG36Hj62f4Cvts0BXI8btExfC5B/HRDemEF7L31BrwAfwjQ
637BF/N5ZIr5feQ7+M856ZLEjzZ4/MVEyHKnyka60wtgWsWC/rBgwQJR4IKl
G+DCqw75cJz8+b5gUBPUVLJXMkugYn01HD11Bk4dqYI1s4ogXd3z5M2DI/Vt
rkBkTe5CuYHo3JVyf9+95FFM+VeqVm/jNfhM9MYtHkn15MCM/XXQ6oX31e3W
ut0wPtNtlJA7B/bXNCFn46jNHQ1wtXIyZMtKPJA75wQ864C/65RU4Za8OWol
/z6aBPkrTnRspxcar22CsRluxerRsOpUvQAAuN6jkrxv4NqqIvDIduTB/LMv
QXA/gQjQVg8Hp2YbzUwvhS33Wl2ByJ4UfrGBaN6FYn8fXWIokv+vupZWeHx0
ERSkUS1FsPDAHWjygmsAFfPmOiwv9Mj7aaPWwO1meVVJpxcaLi2AfMnYdCjZ
WAstAP+hU9qEVeym6BT7++gS438ySP43VIu3BeoOLYKidKOWVE82TNr4LTxr
o1E9EVrvbYYx6aly5MhfeAUavWYHO16chmnZxruZ5fvgkXgvGHqHWmYwxA61
zP8jijRQZP7H8lc8NN9dC6PSUi0Dtmq+Zrfxsw2enF4D47JUU9zpULjgC7jd
5NWqExn78uw0pb4yoXzfI5RDDbmWWthQYlDInTcffmgEJWedN2NAAConhl99
IOZ1odi/jS7RQmRhP92aDmi8sRcqCtT4JEaY7Ikb4bvn7aYmFrJdt60U0mVr
c2DmhQYcoHRrOp7BV5OyjM4Is+7Qk/YIszDk6oNjYcjF/vvoEs3GwrYnx2Hz
mk/gk08+EbTDn/GwZvNReNLGaZcMbc++gfUT1FAlBD5j9Eo4/qgVa3Pp4Qya
4faKQjXaFcDSm00KbOKetwEuzBxpNAWHuvutmn/BtSEQoUOvu3PmhV7m30WR
Vopt/5tivPfNTdg7Nw88bqOK9KIl8NWjVrN0YXfMy1XGYDGsrmk2S8d7c9W9
tFGw9k5zwOEpMcwyg6NwaGX+ITrdV8T936n05vtwaGEBpKnSM0o+he9fdcSz
Eq7OzlFW22hYf7eFld4ENxbmq5qLYNXt4IkbSpnBEjeUMv9jdLqviPtvdOm1
UD0zxwC+UGn5C07C83Y1ETFKuF7B2HPXxro5dK8Y1tQES9zQygyOuKGV+Z+i
031F3H8rfw2EjpdnYUmBR5lsRbDishwP1KfJonGW3WxyVjhjYLOYhwRLWFuR
fpSYUWawhA2lzL+PfNctRMUJdDs8OzYDRip5yJl1Bl50UMliAN5eBhnWAdic
7HQ8haM0AmdOgAP1ba7fyXsoTmKAr70OdY0dLi1cndkSvnUFqmpt91X191Gi
lmLG7xSbva/Pw7xcNf3LXwTX3lDRwpg9Q8ZsBpRX+zdmc+fCZWHMGkW+p1uV
mVUKC7edhto3qrmdmeahVbe2e6v7h8gTTLHC9It2wKvzm2Dx7GkwsWwczDv1
HJ0buoTWOthhOGQhNXsqnH7R4SI111K7CUrU1DG34jI0+Jk6ZpRXy6mjnVUZ
yrJKL5gJm04/gOZm/1PgUOv6OyUzeE19XP+5G+v/XfeT14exXmi8UgF5Ehpp
ULymRlirZs3NNbC6OM2ARs4suNjg1TVDk+l98RStghtNNu/LRdP7MmbzPUFO
MHnrhaY7R2HdzALt/EW3w4SPt8OCwjRnX1Lo1QVmb7c04XfsdvfRWTH5XxEO
nn8NM0Yqh3DRCrgkSuclNP6wGoqNSTV5cLSz2CusvNXFkJaqvJpnbF7Nx3Bg
ijH9cWeUQWVdq/IrJchXa09ugGm5Hrwf7zBbTwy/lj848Pa/dEvNv+8Rqlrc
80nSlrm4XJk57jQoWHQIapu9xoBvOKyb7x+BJUXKoSBG4FnHnonxmlbHkkQl
+2GK0g6e/Ao4eK/ZukzwCi5tmaiXCfIqvobnHfDvFd3bnn4LmyaPxAYIpPoS
OKlLtThx9//ulpr1UldPEdiyKPCB0OFnYAVVgjO0ohnw8dZ9cPj4SThxdD9s
Xz0LRqllCbmaM/cgPGpVUHpfOnfvV09XJpqAk7BE5q/fA4eOnYCj+7fBymn5
bPmtAo4+aVOjopi/NN2GPbNy1fxFq8PkLhT9Hx34+v9Er7q/7Tki/nPOxgSJ
l9ZHp+CzSSPRk5GkcJvqzoCSJQegpsmrcBsv1+d+qJwJeWm+q9Z7blqW5b2N
V2HzuEzZL5/19M6LceLGf41M0X8blX4rov5r+WuA0JOv4Pbp3fDZkplQXpwH
2Rke8KRnQ37JRJizcgsculSP66JGs3Epox1e3TwBlR/PhYmj8yArXYVSTKyA
NVVn4K6YMf29andzbSWMy3RT1/uHXISVqv+t68X+IXqdVvEjsqkfOrRe/hwY
uw/9RGH26p1ncPFmPTx92QRNLe3Q3uF1/Zm8lwQtbe1w6/4LeX/N7ovw8a4L
cKXmqfQ3x+F/onzxvy6fsH7i/H2oOnYD7+lrZ688hE0HfoAvz95x/VZx9smL
N/D1pTr5FfUmqkex2oamVtGcNtf76lpzazvcrnuhGm1cu/f4tbz27FWTa6Aq
slG8h9Xg98Xr5n+nXujweuWj+L3z4CX+FuPgw6eNcXDo3B0cINs7iFSuX6ny
8UEsZ9vhazpOCNtB3U0w6GAUgH2+ee+5eUNcq6t/Lfv23bVHask7Hk5feoBv
4LOuD9XTSHe8ht+GN62/VY2uf/5Gkh77ieSre9KgjaVXjS2SxPjFv/HT2tYR
hw0WteCr1MwPVXE1ojv4+J4TtyQdRJc1d2ofvZJViS5r8j5/1QSPnzVi8S5C
E6IEnxOoUSRXvwbC7uM3JUBOXLgv633Z0AJnLj+AtBlfwKDxu0W1N2H2+jPy
713Hbhj06C9fK136FYxefATy5x+CSZ+ckK8LnEjin7x4X3BK1BnH+zfzs9Mw
fe3XcOnWEx25hH3AwsVXvIE/k+HLM3dg66GrsuRZ607LfiNHsP2KffjgB5Io
CBL8CHbJh1Kn7pMFVmw6B2OXH4Mpq0/K++NWHJPXNx/4oZ/i4OrdF+QlbL2g
PTUT0UhsoJiH89cfy9Lwu+PodflaztwvP1IlIflUL+BNcxsxQ9QlL038+IRW
/tieKWtOWSCHRMibd1C6jejdkiVHqb3q3QTNrcoj17GaOHVZSISuXRRliE8y
PqEvu6cZVEFeisYqUifAi4ZmKUHINAH8P1LdvXb3GXJJCjX1TRTxG9W2j3ed
l4z84uvbevKGKokotGrneWyI7h9SD2uoPnVb9wX5hcWmz9gPWw5eld2Ol60y
+o5ihWAnz55An+4JyXd/pcCIVhWbzqJKkqwTZco2it8DmOZidIpTrRMlyRJv
1D7Xmgs7j2+Lr1a6BBfkFP4ePGGPlmwGY/k3foQiNcicKAmAnxtC1wwWj4gG
a0CQeIni9UIaSgAVh1/RciX178GSrd/KawVCOlDZoQAc/a4WFnx+TjbZM/0L
XV68klfUaSjWCIlP91yUkoW67+yVB1JosHySSBQqfD9r9gGrtkiUgqKKlt0R
TXHFK6FF/tB9/Hv7kWsSq6IKRaUEGL/qOKSJ5qGaELiOV9TJFQTFD70ufiuA
xkueKSC76Pn1+y5LeJDSMqBm6g5iFMLik6oLBHyDuoSxddWX5ctZsw7oPlAD
EGP44TLopDQE5qmd2GXFZf0oAxG2lcBAWiFl4h5Y+Pk3clgj4h/5tlaq+8Pf
3HXxUY70UXxwCsfEV4LszNBJe2lstyve67XPHHUOyS7KEw4oQn9qrfFZ9SXJ
2/2nawxBMmhAwAc5tIAeJXHswa/QUz9Vl7FPNHiKbxyqDRquUJ2hyn/8vFGR
sp/kVl7FQR99NnxKNWTO2k8NQ7SgOsNbQsGQOitccFhLJlJYlUDa+5HoHlIH
sSOtC8NIEoO67k6yjUIoXKT5SJPRFw0H7bQUChQpVbrsKx/GnPvhoX5HwFMy
IVFhBCHPPwJeLkIuodNsVz8pQgwP0vIYv/I4lU0aEHvqowH7aWriF8dPbBmq
BRwGxGhIeOagE+D9saIJSYTghYGQQEpRiA2N3sh7/CA0lMKRfEfLCem2bPt3
Uj6+vfpIK0lBS3860oRLotaR+MVWC5K4DNIO0MoLdd+iLd9IPYrP/SBsYqpG
DLRGK/tpJcM4IR8ZIZAnjCzDQHDUkNgXVGXxqiR8s0zhABtIPCtedASWV36f
oKhcvPCwVqJr914ipZc6tVo2mewYu5LE8Y4rSUKqkA7ZblNJxnMlqVGFXSdU
SVzQwy3CeEb9wS20UBTlsMl7IXvOl0QFtH+wSOSs0n7SFkYUCIVJNg3HmoPu
pK9haBqvoJmLGMLrgrbUVi5KxDwkvWkGDfARN6wdG4esoZFEjLNxOMMRNZHN
iR9BAoIKNo5/CP84MouhghhMxJopTFsx2yGFjLAfZLGEzUeROZ0oWi5soiGk
aBUsCHSyBJpbENqRmyiMaJ4ZRnAiN4Llxxzq47m6UNf8al6yxrF1JLBM85Lq
RLaxwRQLo/6RtsQxiERDQItUl135Hj9/T05Dsf2Cq9RkZDhqNKEAtZHFIYa8
EPreRbqfKGx0LjSdLJsWh4aOeBVnjvTRoDQAx7Uu6mqUABxtL9yol8ORGKlo
YPadJcXzIgSRxE+yZ3FsFbNO9Z+vOIkvYQ5JIox4xJ6e65Lc8rr4lIi8uhxw
ag5tavd4yVLshZgtKSr1l9NFPitB4BEIUb+JeYO29+3q/cLNemNKKUQaqYSi
jCKKGhVtSjHHkiCl+oUFpQ1HUmWk+jfLeZ5xB+2ByUInYR0b918hRbN4y7dy
7s2ZTUUj5ogaxhREE88rNANauQbxRH1UNTa3yICvbo4PaMQdGhTwef16glQt
pAyENcMFZdqnpxwVP84zxJTGovirT96iIUg/T4qfLFUhQfp5MpZC0/1WDCUo
hOJ7nPnYJUHJOA5dBlPdPrvKN/Q2aAubrnei8sUQpBScszSbmOgnsai4qLUX
TrFwliiGQj4Y0QeHMWHDaoz4DKdsmopfnC7jsIcSiMaamIYQrxVM5FfMojig
qURSilgrDaRiUCWy+BkLGFdsY4E5CxVc1QqPqWH5QfHq76zvaUcOZzCKEGoA
qYZBGqto1nGisiFBT0KYI8FFuMC+oxkt7DKt0pBqhEM2dvCxUZKJBJ2EHz+i
xXSZTEUs5mVDS6JCK7aMf7C/Aj5xDMzcnaBUApnvOFURJp1+e8MXlwMNFUZL
uKWpwWzV89RovMZmuUS6uw+DGCaM8U+GkS3Z9i3OxckwcRwkErTAz/jsayTB
AFWZ0zhxVOgLK+qt4wTyFj+iSFILSn1xMTZ8WwYl+RCBX/G43yECRZhagjaX
ek91O146btRELMCQEA9zN5whU8NFQrm66oKcy+JHqJQAQ4HRPLXCluoy/sIf
v8QfP/J5CMD0wTNI6VajAkMGGutExkCK/7O5viyLzAk1crjsQwfWxWCFVeUb
Ux8Xd8Rwgp66WOfiAxheM5a1rEpukJzPGdWpauSzohnk5ULaoVRnzNwv9IBR
HekPpY/UxNko+tmrJvl8fsUhrXNIVPE9aQIal3mrhQSTzqAGmx001BOfoiFt
RGlEaoQqgSbRGJfEU9RbrBbN5G9+eKgVU+GCQ7aBLl7bvKZg9POhLHUdmSaU
eLISNW7Nagdvsl2f6+UhdIj71XuCbKKlksf4JSXGa+f2EvlNAZTXO45120pH
35EBvWt+RoYkBXAaP/E3ftSCjgQGM9TxTVW6HjfRa8pHDeIszkqFsRuHcwPl
s7XSPVELGUHHmI/7qjs/Awg5wYjgZtF+xxOurJZt/45GBCyB1rJw+igAoVHp
NJgIkpC2xtvUADFPIB7gvJq/ZYIhQToJcMKEeGcyjz1WrLGwkjtM0RXMtdsM
YRIKZajRjUWi1w31wABVBiOZ/KCJFm/Ij6GpuaSrilyEeT4nF2zSUiReIYeq
01BCxpceSpJ9hUyYcdg1bGqijTJi4o2t4MOAjxwz4A9Q15BCSvE6PkcwJorM
Xn9aUxPX1AhYsvM/Cm9AGD65WmtiGhDQl0z+UfR22geET6qcB4Ts2Qf4gJBm
rB24+LTZXn0XBwJmIfodCEzXjDFloeffY89zuwGFibuA6SPmnmTP2TX/un2X
A2p+xESV9tu67MrQ8L4ZPeJEIkwMnbzXRxc5jAGOU0paLQliMFDolu91Nhhw
dTdv41lNDafBgE2OOh8MsJ04XNPHHAz62QcDeZ/pYtLwpDQJRwRdjFMIODgk
WrzoanDQWFi543t9b9a60zSvIUFzGhSOfX9Pv3L+xmMqiWs4ocLjcMalfKMk
svZ5BtJw36nbTuOCUEJ8XGBMDmVcIBnGj1Zl1lVOMSSSnY3GMkegGgv4XI+U
4EgxVbb7O2gKQQCnVUY+DFy4WS9d1BTKsf3wNa0hDp27S3TX18hy5aB3HA2S
LGTCgQ/DHJhDFMUU54ejFx+xeFfsapnDl8QcGaNm5vo5XHqwi3RXhwN0y42g
JRKXwzIOHw7In8T1/0eKFrRcOmTCHnkPpypibHFyFYlhgapDw2OwrVlO6n3b
oWuasVy9o304iKl3dDl0ot6JSkqls04koF2vGZpFg5BVe4uOEI/QAlT6ynCr
JasbOXO/1A4tzlCr7u1cb/d3oAgxlE9qnXSzwKKT40U7qRPktJfpKHJAX779
RJvnCGg+f1UrLqwTCZZVLUFnwggu6qmYFKFKTRAwfWx07ycB1TE6bCkuzJ8+
VhrIn4PIWLU2Ia+EWVOSOcD0qIi42vzlD3rlhitjPsEnV6FNGevL1kGLkEvK
GKeWyQ6toDGMBsPoqGHxBpHMQQ1r4OIKEC3LEcm47v2xulZ96rbuAJlQw0yD
Q34DWNj9VDHYQgVYTS+K+zKx5Kw0sUnKDtXvMnjqpqJNSgqS1AGOyhu+uGyR
T64MbS51XxVomFK4Xku9NfyHRlFM/+mmMR+yORZMrfZRfvScXfnRQsIHiubo
JycuoqeJBAEDluJUQIea2Mo33vOrCeOl6W5tm181iGCwqEFiEYe00/gXCTWI
QV2B1KBoc3hq0FYImh8K1n5VHntFq7xNTiovyZ/Ko4U48vP603gnjegBEl/U
VPjBGBV0T5kzD0Pj0Sq8f43X3zIVkWATQMSycEqKH9EkrfJxeYCeE4NgnAPd
aWoQSOWNUuvYEVJ5OGAhTfE1YXI5qbwzlx8QzbBv6DFwUnl7xewO3a2cZujs
H2E8r/UId+aRymNDpI/Ko2VvBPLiLY4q7wMH9UZyisGjdlWGRZEqo4moXesK
WVZ6S6svHOTt6gu1bPlKc31JaFJz1inYR+rrJwHU19Q1p3zUElKaaXD5DC4y
8fn0D3eeBlRLvwisgjAg2JwU+1FB76kyKCwYP4J87zFK2rXLmKX2uUCyj2LA
D65Wz/jsa0cvHHPiYRAjyg6GQTvFaWFxOGiEoWd4jZHTM2q52r4swRdvEbj2
yYavfonn+kWjhchn6pZku/9T3r8i0Ior9qHaVJylXVYw8XqKU7jgkPbc8cdF
0wl3fMmYLAyMA7aLL5ehZNWKFJsGwWoFJWh1dcKqE/qy4JeTEvkTdY3bTVQj
6idl1RqSb9MMzLrV74yY4muU4Ep0MBoBn7FqhCSpqXmcCT4jRIheUWT3UQYY
vBtAGRAlUN+QwUpIYFGajnpAjO7+9UCCnNRitLLyXpORgtEd6JwUWtPFZ7S4
vizUkcvufMHP2SsPE9hlnLCi2clmDNgtsmJpbJu/Wav+ntEEqOEiqAlwm4aT
JjAdPElS+dg1gWgOvYKWHwLJ8Hn5VwI4Ge9MCYhnglUC6GJC/orf4SgB7gYg
8cIwYqsSiOdKwDF6wx62lzFzPzrwnLTBv1HXzOhA8uQ7Cv0vmdBjaJQ/AScW
8wWu9xUN5cqwOZORC5IrdnzfmYCj5NoFHF13KlaZOocqjNwrRC/sfyABFy1y
EnDSuTywgkhavFBHNHE5cxJqAdsEVukgY/JnypfTkonV+dojQo3+macvmzoT
6k02oXaaw2F4oH1+i9WjL5oLNY+bchBqFvwZUKh93ai+Qo2WlD+hRitMPENu
Qz8C/NV3ZqBZIAHmrfEvwEZMAGIZvw1vWsmhxPyiuH2nH+s3hutwGeaWTwAZ
/pV6nM0EHE0OJzXNnSRo/3Iu+xNc4vwvGNppKPgzVRNGtGOgAnogwpBGtmCM
ofdO0oi78nA4FoOnXRoHGVYGlYCBqNGVxlMX6+zSiAMWzrv8SaNyERFPMAwK
N3sY+wtNaSTThrwiaBqQQUfPYUvsbk4mbS67uKEBE0lxQ6ZxQx7L9CNuYk5M
gOcIJnFjC6oa1Vy0aMUKiUsBtwo2rn8ITWj+ykFA/lRdw84iQ0IB/p+za+Qs
pW7Rark/1NNChC1MwsoDg1c0qSJjxA/kebB2GJBH96gD5FGgCfIUKSjoQqHV
PE7ODnflUtAuBpxQ0IIBX6EivJNnEsmJ+3CDxXbRwsMBsU0LVp1hm8sC6cD3
HXhDclnMvFvEdkRnMGhWdpdei+RoZovawaAZN1bStb9gyFUxYhq5OCLiDmCO
3ANnasgR7PqZA0pJdweBUhpJCKXMXuMoxeB2X5SeDhal2DEHlFJAAj6OyxRo
lDCU4jYHQguOUiqgWv6Pa67G9jgrqgaxUdEfSu2ToUAoNd0QVpS+HyIi/4m6
xlfqCGlDmE+fLzvhB9eo/4G13Q/C1u695IMwHqXEEabQoRHGnyOE8fICIWz4
lOpACEMu0VyFsGCLa6fLNkIGQhOuoVB0rR804RetRI0mg6IUtJPAyEFDRaAF
4WCRdP7GYx8kZZubzHyQJIQ7ZCT92wCoQenFQCQxx9Ooefi0wR9qis29Axo1
GLcdLmqUb56hJgE+//IHSieBZRClOFrI/AgOGRRRjp4Ptb3RMglQqHD5gwU6
exkssF80v40ELFBKaHYwUDHHHsu1QtynABRiP1e8mPqCsx8jMVQIjSP7/xtr
j43VRK16Ns8dFICttL+Vs5UxQLOVeIW2Xc7cL4lyuIsjEFu/u/a4E7bydeFQ
2Lpx/xV8l0eRhMpCmmH5Lk4kaimmL8a/kfdFsUv+94cA7Lnz8KU/9vAZLWcP
5rvA//5GXePL0D9zaC55aKw0fxQlmq8QxmcnNB9vLlxpmn9//bE22gPRnBnj
IdP8v6prw42N17Kj/a00x8BqJ5pTsf9XAPpyJ1rk6FugVkqpCLSwbPSlTRiJ
fhtnvfYhe5eukariNNysrvkLrRgSgEBkFeN/f6yu4ZyfriWpFnPqoAp8+LRR
1REvY0ztJEJyYFA3koiiBjl5UPsjJjh9SJ8Rfbj/MRB9+CJQpOgzito81Ypj
9BxQv7lOogksWhVkqfR36Dd6gPz1+9cB+sjrCqePLuuK0//HqqcV+FJ1jUxq
ADMbRjhdVUFIPdFV7luhrvKFu0h3FSd0aLeF2lXuiYlAV290tVsyRmJggE5w
zyJ1gpsYYXaCjdBd74TLGunRA93hxQbqDq8q1O7gu0pBhtwdnCd0Y3fIBeLU
nb8M0PQshgpqOkpMNzadHIHBNv2/f6ubyfarOzaTdifzCeL7UWomYt9PM7mm
7elmUnxLV5p5Pvxm8oX6KDeTO0pDbSYfxKiZuDeFshHFYDO/7bxJKiBDPkgR
ANymPRQbzeRK5Zfs8XCbid4OtUgai8384wBN4hHaUW4SZtQL1CSIbvU8zLZ3
Vj9FpfLpoeqdHFJ8ivHz2GgSV4vUpHzmJ4yRJvFrITVJ7dg33qD90EE2hCX+
sTSERp1ADaHUwP5o06Cu8TUjHkAdQjO5nPFm0hgeqJl83T1QM7kufrebSe4C
vtQ8uPubvpj5/IJtOhXLdly6/k91jTezK9054NAd8npwrP8P6hrtHg6y20tC
6LYaACzF9kS3s2aZ01Ty61PuTvyPbyuJAilwAUztt3IciPgaarTJ4xSf4bth
wFgUoyCIDxz65kQyHiSvkibad+AESzKV0dnyHG6IpXx+kSDZCjMjQUCS8ToC
kQyRR36hUEnGYusiSTJc1cYlYt5MttkpaJJR7h1Mz07PkUXnRDIuXDFOMty5
YCcZBRHGO7xLJGPJXB1JRrslMP5cRSPpHSpOJONru9EiGa7iRoBkFGJPzzUb
0c6WZnLbn0jGTcPBqmGMZPKDW9BZADnvhZOMrlXXBk/Yra/RQpTTuiCPyegK
RSkAFwMwyWEghOh9K1HxbiCi0hjD3agD2HN2QuPHTmhuQfkndKKF0Bhgi8t+
VC76m67XPvMr1kRlbj4EorLvrn5nKuPW7WCojG5Auu5LZafkh05U5teCpTJd
wzTGuBUK/6OFWV8qJ8gFVWwtxuro7KTG+ifmHME9BhSX1h0E9g3bt6boe/i0
gaL0Q6cxhqPS+kZoNE7mNJZfXOHED2Y8+89+6WsNW6WWY5AuZQG/9/h1V+hL
W1Bxmkq5XGd89jXPtBAqiXX+zHBIjGSjmI9+SpD5Oj9+cUsWkR8FuTNS0+qB
P1KnqGsYd4BzaCOhn9FGvp8nkDoOls58SwHb2MzpTKtpqCPRLTJv41nXT7uD
zjxMHL8YYdhPtV7lgNf3MLwWPwfO1Pik0cBtz9QJvsD/O3WNuxkJ5kj7O0bG
a22uhkP7n6i+oCXPYs8s2YP98AAl284D2myFKU2JBzx5UJd5gFlXVlR+HxYP
aIAzt1WbPMAzJwaya3YecO8z8YDvO4wED7BeFpYeDA/UZmcLmWay0B+KYHTi
i049LjRm0HzZxOYBnC+qXUHwZaBfvmD2faIL8UWobSe20MiBecLpGu1JQXcF
xssv2/6d6x91I/twws638ZnsS7SwDwksRE1Huzrx0FcVmjzE9NQfMJqobB16
tKPpmwpaDo6vm7vM10QnvvrkrcGwWnnNiat6pWlqNcw1AtIscRHUmO7kKksk
4sNVOpWKPmYi59C5iv2i/qNk4kkw+t04vES2Lt9Ja+Mvy+5v4y/ujsGJrD3p
F37ERDUgf+l5HmfIzyN4/LxRn0eA9qtfnvtht9M17KRib3QgIBEw2YHxv3K4
FgwY7OfJdAqGbcGBASlBMU/0LvoLyRoh/geABZ1TdqXmqYIFnQBgS/IkKxem
XjBocJph+O7Ed0ZBGvMo094u5hHSz7/HaBBVNNgUwiSGTJVXRLtmgsUFWdwo
NbhZH5jLx8m6ccIIfy5UjOA1ta8uMEbi+VkGYmSxAATPJAkAEJz+RAMgTn4t
NFFxjDXO/AlNdeCuvuiCxZhr0GlApcu+ClWP8O3t1IRQ8cI3NYaElzi8ZCa/
PS0nUhj7EhxKnM6OEyihJuAJqCoztGXPP70iD8UwHsU4dDtAKEkNBwjfJxPP
isR9abiNUYxz3MQPBiO0jhNNjBAO8SOYTuE2yN9dXxkOJdJ5weBmxY7vNW5w
y2C4uHFKt8Rwo3WGPCEgsMqxFm09J6XrYIpDjnB+O0CIbXbVECJdxCGEypFi
nHiR9GEJymIJQmy50QdCx0KHEJopBCFmwkQFQrjKqhM6GTlPUFlSLIuCFM9N
omYB0rejDqOmrIr88KKzVx5+ZAUR2ruUUoR2hu85cTMiIEqfsd9F/i7feVOX
QYTGHYGIODlo3GoY7nHLVKcDVcLTVE8hpJTtYlUnwuCxS2CEW55lQ/ddv1X3
BpWvh2FpHnlvRNpEGFJO7RA/y0U5YxbD0JwScS9DPCPqcmfCiIxSGJa/HAaP
q9KAfkfAi6kXOXjxPQZe2gxOJhU6VosWHuaTNJruyczovqAVhSnQ/kQ1l6uK
xM6QynPU4FIjZwdLDhMOUnnogRNSeZJZygf6R+raZHWCuwW95ZtgaHpaWOgd
oMuohCFjPhe/TdNmUPkWGFK6HUMRdLZOJ5T3089vhSF5xQLZbmPzj0SpQHpa
KQwdU6n78I4gnPxu/GwqmRcYT7J+X2/xJ4Sz1Ps6JAjvYaIzzJJx495zoSNC
ADTzJ3BA8zQLXQG0aD9ld+YRDYEArU7jsgCawGACGnuyCwYXFgogKbC6swSX
hmeXoftt0gz8C4aPnAop46rIUeKEbXIdDCrfLnCJxWXBsKKNEuOUEARlJ2Vk
trhXCMNGbw8Ec4OvAnHlO2BIfiGMSKXW5cDw3ApIKV4OKUVzYGhWtm75CE8p
pIzdpddgogB9TBQQLvTJ2sSxE50G2w5d08OxL/STOPTlF3PqfvVdLRHajng8
tdDoZT9HmNNvce9XVmTjXnJM8jNl9UkHZPPt3xFBtjVAl57ja6mBYI0LSHZY
L1YGDsJ6oKLeoHGfalClujNgeOFGGFy+m5jApZnSRSN0B5euE2oYvwjdKr2d
evCY6QLybpIQgjbZdyayUw0tnD4Vhoyr+rBThIt7pXN1ySM8Y4Ty3uEyixUD
RX6RQr94JmspDhA/DwDw129augJwnlUsWICje/fCjXoNcKdzzJwAjuvOHOCI
aGFU+AM45gsMBPA5YvRGGdnwxRUF8J85VE7eFsw8StiKYzTpAtR3fnXD1kcj
/3m4UOeHpRPUcQ5AUKd0H4Ms2MyBYcWfu5xwbvDuA4GqnTC4uNwJz8azdjB7
yiCldEcgdZ2k7wnA5mQbgBU29/BR27RTdFD555CSma6qzIOhpbtcgZDMD3Tp
JiQrqyEAkpMtZ9niF1e5cfrNQ4wUkuV/5F60wxkPaDO6muQI5/X7Lv9p5zDG
aWkgGItRIVQY8/AI7v+MJIwxHbIVxkhyAcuisQyW2TCscH0iK8bKu/eVywPR
PN4BzTYUp41DFKuwlU5gLAaP4WmqvLRJ8p6G8fgqGFRSZtxL9cCIvPWRh/G2
sGCMcEXrFT23ocKYnFjBwhjPocAUVbgwGgjGgsNBwBhrCQTjSXTWYvfBGOfM
ncEYs5UTjJ3CZyl6AzXukMKxOFlTGE2H4Xkr0SDR7/nieyCbJqNocIxnwIiM
TIbtsZA5/QvCQiBoDy6dbtru2atlEzTsxy6H4VRFeoW8RzsIIgVtQUKCNp48
peKBOoU2/4QL7YpNZwNA22mHe6QhzaPZOoH0oi3fRBzSFCznBOmfK2Lj9BKN
DEo/5w/a/QnaOH0cNUmYrjRBEyox28AOtZEdbaiYmmTLY6ZVeJx0ZSRouyN1
giRB58hOEK0YpZCdJqz9Tdq+Lt8Aw9LVRECUOGRcVEHN2U6g5ucyhwfq9/yC
mhxzuNUFk1Nh8FecQ738Gs4+b9Q+Vzt8ggU5hjQFA3Ju0ncCcnY+WMRBTk3E
FTdMWYBT8F8o4mMd/OMP5AN06VViBjgPhnsUjhCdGdPQ20DM0KktrcAW33Hr
YWhGuga2O02YDOvALfggJgfUcnWyjSrDP9hNK0SMKPm55vR2dKU5oxy/BVIy
0k33zNhd3Y14vj4QLcRT6n+OeFzmxWWYddWXLaqeynZCPNqiuPYvyrchnkWU
WBCvMmBoxPOA46gh3jp6sKOlnEBP6bCDBT0mFKImUKbJQWNXInBNwKdNgJSy
nXDcH9jLN0JKdhYaJfHaIZ0F7pLPYfTio67wkb5DTinJth8+ZoeJdJxuZmXo
KeWwssggnZatYhjp1D0jSM24duv+CxvS4znSXb/h8LaeiieGhDhcvBTtbGpp
s2Rvx3BvYaaR14ajED0/6gxRSgnkC/Aki3yQt12uTxrt+IYdpMzO+IkErvl+
BT3PHLcWhmZlKlvBmBiu/urOz9RDGtImnJU1MgaGFZheE7d7JGRO2CUd3NTk
0LHN8Js6EoZxbMt7mQrb4p6Yu0YC2wSmILDNN0sTtvkggJ9nr5q6Bdu8bDPh
4elgsC0z9Bqk4muW2BJ+4iEHtrhHlXQGaMLLqp3n5fFdTqtUPNAkkpCmw7YG
jdsAQxlW0wqWwpCxVT9VD8kmojvEAmfp1ANpvxdPsHpdijYgrGlpskuoRn9k
6U6GaqHNsRkS8dkS8V1B9Rh1DZescdpitjEg0s9eedgp0lkQkg2hiTKGg59d
hUhN6hbE64MW7IhH45/2u2vE9/NBPNouNMkWLXGKYSJVjkRCwwiR6YR8VAU4
lRADRLcj/0OG/JRM0qACj9lLceqpZ5lzdwjU+7iyabcYgb843fQd4kLRoHKz
5Sqhdwjo38HQb+htvzo9CPRT9pdA6CfuBYl+3JyZMXO/JfaBQrDpGpcISnZ4
6NxdmX/9xetml5NGRT1jbJSIznjQ1NIurokWuOL1in4n0vFzdYuUO0an+hMN
/LBVUifReF8Vt9eIAMX9Kkbt9DCGhqrN7VHDPi3EDB63AoZ53KYuLdlumqAz
FqsgKw16xdokifrrXy6DNLe6nzmXL42OW2EGGIRjoA/za6DnyjUfJ8AnKbry
WGmK0YoA4PGDW414bARlriPOoZyhNhOqXWcG5wD2B/g7D16KMnD1PV46xSMJ
eCzhg6iC++RFX3CTJxoDTC3gxht0TEV0wZ2kVPNoyCRfddZyBKll0/GY2TA8
XWKbMPDkxSsYNXkqjMichevvFB3EIA1y/ab0U7xN8SydO1ryOne0uAthqB9H
C50DDB3P4cRkw/jJHL8fcuYeVLNtq2FkjWh0loDn6szuECSgrv51QAmgOFE8
y8+/BCTYJWBAzwIdp6s4B8UvziT9AJ3id2MG6HodctzHUJ6ttLhnrPRP+6SH
YIGCODUfv+qYdLAb884PbPhWgPXkwvD85YhzVYYPyLXnvJg85x4Y4c9zPsav
57xL8Jaxi6Nt9OwU1An8wDfOZvT2ok6bxA6X7F247qeuEYbFzEYUu0miCJNy
BAniRA5iObiNX3Vciz+2hTJ80PwXs02hZagIHQye8fQkwnOi5loVDB49HYZl
CVCl58Pw4q0Ys2RaEhthURE5p4shZWyVYzYUDndSVAHhrr2Uo2HoqE0WuOMS
/unaV7oJbAl0RPZqZu1bl0BHZPhfAo2GSieTFk+ZJ/Tz0840+vtb0H9f8FHt
sNVhtf7g77QyRMNE7xEJfNwelhsQ/uikRdxy+CsXp4Y/39YeJPw/qTKXfS3w
LylVIXsCf/kbsXoT/utgRh7p1NGonR094zwpQugisRsGly4WEkjuHiPiYETO
LBjuRyTKMVpSwT5tArOASKB5wMsGFOhukQqn0HA695Xh1Z9o4IflCQhKNDjF
wxAN3LB37a7pfHxHRYMzzNSty2jjD6SmTwL3lH1mWErJJMilEAIVetKfcSk8
ubBOZonciMDBxWKS4HHLSAO5UmXIA6sj0Yg9zx2p5CdTjGQ8mHGzNZixbKdj
FFi3SgSbfsaARBjpGgZY9kAGkIYoCcOv5bVkmTcAg9wx6Q7H/vYj14LG/rrq
y+FhH39WwpCRFBgrdHDOYsS4DvTGSWnZImmxuKWeFTPN4i38/J5ISAB11Fja
lW4ZVxxJQPoULQFaYsvm68CeEbixqJRi07EV24yNHsrwGpG9zHHnRSAJIIox
CTA3VWXICb+lz1waRqs7mDIGj5VgwNfWE1uBDyQQlCcxmgJRuOBwbAjEn6nG
cSEQnQtWBsRrNCPGJAaUEo9i0e1ysfMrk2yYYkblXNJ2y2Bhb2szXdolo2FY
Pu7vWQopRfNhaM5oM1wRjY+sBYiKSAuGtnWEeZaSmWluN8qcAefqGszdSDth
cMEos7Vijj0sdy4MLRKtLZwJwzJNi4t2I5kYFyJeXCTR/R5hHB1KJZWW0ak7
ZYfVZZOdJIvs4FQRHf8CRzQwIePR5dLU0uYi1yjGLOJyCQZ1hipHAxTWWGZY
FBSKEeCiJFphiFI/R1HCa9jYW/df0GDJgyA+6poI4bVIiVCSfJPHOatlTOIZ
BmPioFW44JBeerRLGCcoUomyItM5ktJ8L1sG6dkZiM0kHZrjgYKZldLQ4qfd
R0KaeBj90Iw05b+dCd8/fsP2r+LWJhRu3/2rKWMqzaEqKmKjtj2i38BtrEwM
y58v6hxauEC0cGhhBQzLMH0UQwsW4B2hlNCvoBdKuEQVKWrjeulIlchNNIlC
vJy2tiLvUVpwNY22SXEHIVGbnZWtlmaTfdJiOkkXP1aDpIsdMdWpdCXYpYsW
aZyk6bPqS7Iz4rddmuj4zhCliSSHzsBRUkXbEoMUKKUU7KkQUDMFK1Dk9B2g
fubO3QvuMoGQkQK9aZkycmIETq/TC2F4zgxIKfkczl19xM/5C0aoMOmuOjDb
Uagoi+ig0lmGh8oQKJ31YDxmPVgqBswxoiVGq1I9KutBgZH1gKqXKmHsxzCk
aImQqRTxM15uqB0ylu9hD16m9AbKcasNh7GMcV3LtjcEP8kpVM9jKAN6I4lU
CLZA0uSUjSmS0uSbFz8K0vTXVsmh9ocpORSaGCOSY8CeDgchJYrrMla6Bi8y
WAclB3ASGcIXH5D/aYjYpr3r6KCQhqg7H7fohgtrqjbSsD5+/p5fWGM2usfP
GuFlQ0tMwBphg+PkF1/f7tWwpipw3BtpJm8lmPOkZZ0jPNESS43ab9jkvRr9
3Yd0Yxt8ioznwE0Os+WyX5xuaXBwT1XXcHMs2uK4iEXurmiJgFMIG8too2fl
PIRNzFgGRhn1v3kLEM42oXKEJ9jai1+Bdv+WjxXkOBRjVG13gtzokZjwjFul
/A7pMLxALmioeoID+H9R13jSZnIFUb5n5HRPgt6swwp6QfeeA/0AO+jl37iR
m44njQDqkzTq6dANPNH77JWH5Kng5FCA16mE3kKwo70/qlw5n4vkLp5wwO7k
9+z9YMcAIoqI9gP2b64+iiDY2YEPkQB7ogY7d2klRBzpxAV+KC0PHYsW+jGw
XYgvQ/9p6PB2jn6jvWhxbZU7HyT6Mxcqx6gP8t8d4BOUWWYolxPqZYbULqEe
ncQc9eibxAQV+DtWUc+Op8JEGsQCDoFgUY+u23BRr3qmUD8Alnx+CKpmzoKP
qy9AfasBfwfU91MFDR671Mhggq7Sos97QNUnacTje+w+YSoKQP+h5qlcYcLv
i9fN0QZ6kiWhJgM6mRl8GyV+cX2F1iT4LhmKzI8Q4nFEsyO+ta1Dnh3FEE8+
DDwoj8MWt3AQQy6IyZva6BQ07NXpHBbYU7AhwX7KJ+aJeYFhfxAqy4wkrhkl
C2HXhWfQ5h/20qtfVGp4auQCXGWXYU+Ly5irPcKwj2NVIGb5tvVwROHE+ftk
j/LN5/R6CHIwWZ1oOHdDNOQAoyVo6KZXcSaFroIdR6/rDHF2eThnxHd3Lg/W
jWr4qXvSgGS2r24Ss2wigW/7Ewl81X70aDgiQVa9FonVQYrElhNwbnU5ZKlQ
KrcnF2ZsOQb7JlpEoj8VjmnX5J4z8Xj2ImMTaHBmT56DNNDedlRlJA3ozIug
NDiFyIUlDRciJQ3cER+ENGBaqC5KA22zFo3wKw1qS4NdGuioblMa7CkmjGus
r3oACkIsMO2/P7GgYzV7RCxk99vgxZVqWFKSYYRRud3gUdHcKBb58w8bHljM
brFIBSOmwwiPUyZxZ5ngDvNAMkHcCFYm5m8+F4xMtLV3iGtVx26IaxjK1mtk
gm2jj5xMJFhkQrQozkkgMGkvrTdEQSC4SNoFwn7aqpNA2A0+FAiKfqgXZaCt
jxlECJXBCYTpAsNPx5tbsH9hIaS7UyneD+Vh1KKjlmIM82m0JS5QCYVFJrlg
/EZd44eV/nWUhUU8H4yw4BMDIysYY5aagsExGzXB4K5Yu2DsPn5TRnlghIWT
YJQt0x5VJhjWAyGo1T0kEPxY+mAEgkI3QxeIARaBkJ/WejixvBiFQo8QQiLe
Uz01QrwptUBAg4lkgCcD6iUysOfEzVBlAFeSelwGklTT2OqqJA/vY3eCnqWJ
MEEfJ3GaYLkpyqANlpEEuhjgtIeUd5V0hbe5FvZOGynNIgV0cwNC2TwW5u3f
BuoKzCneA7N0q1HQRfTrIejT/hgcud5q6K+uMo9h8w/9BHmuOIah4Xf04iO0
OSEI9G87dM2vyscPP6aYO8KNFib7SEKRisjH477jcBFPvNfc2h6SRBibxI1r
6mws+d+vDcnUHbTKC4Gj7dF+mJLtJlkx9+rsgiEFxnkUFlGRkhIJAUGu0hwo
VAFh+X+S1G0mIPKL7vfnr5poI0EgucASe0wuXrxuloe8ojoOUS7wNdK4geVi
d2C5MFYIB1jQiV+7QKANZhMIls05IgLBCU1zGH6WCZUfrEBwhCqBkEmjfAXC
7kTHJ5xSs3QF+8QQ3Mtz+fYTNWqGhn0GoiQFEjv2kREfBg98ogYGMWFmmMFa
Io1VIjqTreFNa38bkbomDwRevPWPbbjEzZyBhIASV/O+sL5GBf94P2z8G4nW
6NlJxrl5is7J+iRd5P7Ne8/fETmglqIcxKl+qeNi5WpMz8rDqYt1sgUGFI1r
M9Z+rSk1IKLCwDfj2IUBzYO3TBj4qVHYVPTEkTDwrMX4eduEIZELg7yXOWu/
bp2TUNizkXZBKDDhHQ7kt+6/CEcoKL8QFwoe3hF9oTj6Xa0cOczGdp9QjFka
slAc/ba2Tyj0tT9X14ZPrvYZIYIRFDFhCktQxHQ8OEGJh/PXH8uIFvHb9ePw
BQRDucjyxbA73DSKL74XNQH5Z90sDPbtRIRojLPwIwxo2pA5GQ1hwPj33icM
/FoowiCMxrCEwUwr51cYfukAfJp38jA7hVQq3jLXIxL1LOJv1D6XMSfbDl/z
QTzyaKqpiJwaH44A8IU8mwDwTzQEgC+Gvz0CQJoJZ6jWa0k+QoGUSZ26zx56
GmG5oM2+kZALmgZ3j1wMsD2vvUU2PrwDwjD901O9QhiS5MGLduIK6vCoIX9y
gYfk4VExmBBdFB2KXJB3ujO5WLb9O5ILHqLWVbkgtgYhF3hmE3bym6uPIiUX
uND0jsrFDLWZKPblwom4AeXCeiizwd/+llgt6iie2jdcjTcGUa1d6EwoxLUe
Eoq/CU4A0NUr3b0T9jgKAD4fTQG4UvNUyixmLIsRAaA2YIpY3mQhEC5KHtOZ
IPxKXcM5n/LqurpNLt6zEcpsZDLJhu4Upg9G/qdM3BNAOBIgv8IMhGSGM4E6
QrKBh1b2rGz8j+oaHtftb1CIjEwkOsmE3uHAt6Phd5cMgjTK4ie1Ec98hSLJ
RyjQfhCApIE+XLmw58MNRy6Y5yE25YLO0UNiEI0RE3a54A7y6MkFvhJtuTh/
43EQckGNjJRc4HlrPS0X+BFt65OLMOWCzRh8wF6x6ZzGhPi7J4Vize6LIQuF
6K4foRDTHde/DCAAPLIukAAQcYVijqgAECr3nLglQ5y8Xm+sCgJuCIsJQdB8
qrpAuS50pFI0hIPjhYLle0g4KBtsZIQDl/cDCQc/6C4Y4cB1xmgIB8uPFqpw
2NPqEi/mbz4XUeFAYxzzeqROrY4N4UC6qKlyn3DsludX/IdwpCDJ53AtdAEL
xFKWsFgBPx6XHCT4sXeRBr8qvw/8MQh+7E4Q4J/JkqLSxImDX1CK5hKRBH2j
MHvU/CJk0BMaN3xxJRqgJ+KiW+DTPRcteFIxAt0jCLnzvuwThKgIAi61oGfz
wo16LQi86m4QBEIl1/7kMQ1VEMQ1f4JAR/mELwjGtgu+xQOnT2JeYId0t8iE
6o+jTPxaXWOs0AAJVk7oNMO3VE7q2daJAHLy/6pbWw5elQbuLnl4QkCZwEUC
dFbnyV30MS0T3N6LlEzg/4LQb6VMEP1ClQm0mXtUJgb4lYkClZIet2OJ7tER
hg6ikOIM+58oGG89dNWyqZJDnKfi7SUQn73udKQg/qG6RhkN8T9aq4592NM8
kLDJicDWr51gz22RHoF9f7+w5ysEThvvAmH+7J2fqstc7gU9CO58jT4YuB/7
XmcK7ym4L92G7Ngkt+zhjCQCcGeA6T64Exzx9E1MTYX//bG6po5yCEkEKNc8
hlfQRzc7OOUfA1LwjUEJHylA9KDbvaWtPVQpEIIVYSlg+aR6SgrQHUD7NBwk
wNXzIuB3TzOBd/TiI8QnDXynHfnBAh/zhYYAfHQsBwI+RQd2C/CtTFTA12dx
9hjQMZolwkBfueP7gEBX3pteBPQQdD2+i3kSIgX5PDOyKBjII20CQd5paSlC
kKf9P5duPYltyNOAE0HII4SpSjxGxQ55XuxbCXn8RAbyiZZw6hv3nquUVjGH
+z9/hzHOV6N7DuOGuwqzGaPdiPlfeBmxDvMJq05Y6GxmZ+vvF+aUqnASOzkz
VLgb7wYH96cvm+TRUK8aW2Ia7mLM8Qv3Ow9fwviVx2MN7iuElRQO3PknFuCu
TvjtFO5ss7v8YALyOJk0OxEzpPgkQXCiJX5xNEjsMszjOcxd/6Qnsb3/dE1A
bJPsO2Eba17w+blgsY17M5Q4RxXbxvOxgW10voSLbadDHXyxHc/3Xrjo2Bgb
nnsBnEeFhlvEYVdwSz3zwW08x60+AfBtx6kT1t5inGKah9jA6Z0HL3sTTvMY
TukaH4P7s3f7sBsV7CKLYgO7GPMRCLvo3cMkDpj7p1uxm6DxhNeFiWKHBYcv
h4ATfMmETJ1qDU5ws1x39hVB5Jv98Fh/MP5ZADF6h6GNeTI5IJ2gPW/j2W6H
thW7FADDcSruUwBMNCCNHx3a2zVI2+NtIg1pp3b0FKTVOVE9AenfqiZwkop6
7WjG16OD5sfPG0NC846j133RnOyTgGHXVzfkoUgXbtZrdLNdIfJj+pXiCdGs
ae8Mqj9S1/B4SsrWSqFUkUY6D/RgSEeFit47So8QKaSvq77sF+nY3Qs36qOB
9CSOdDh07i6cvfIAWlrb7ZneFIgT1GXb4Yv+sE3zR3QUBYttXHB+h7FNm66w
Td2EbcIvFdkZplftPB8UptmJcQrTVnn4aRQAnWABNDsCuPuBrEjSB+SYBTLL
m/YuApmoXb7yOF130VkidhvaRGeXgbyi0vc8oGgDuVil8+LtUANNH5DfGiBz
/1fYQDZzwWFmNYyGoSxASDXat+l7oIMviLPnfBlREPPn+jtc60UgvnX/hZz0
GNx750F87/HrMEGcbAexfAbV3dOXTZpkRIpQEWySPRGWm2r7XUYwOaXEHEmG
rDS1tEUbrQfPRgqt3H3jB62iP52h1cybGSpakxzRKu6T3yVcoHL3nz0Iu7uA
Stfw3Bh6jvoQI+D9KLpA5S3oGlB5SRqo1nxy7/UcStFZg5s3Z68/HXWU/kw1
iW32kl+FWkoPiUa1iiLRTeoKiJl/PWIgVnZUd4OYAu62Hrr6loE4yQfEeCy5
0D+0fshxjK3BswfEI7Q2zL3cBJBo49hORxuOkYGqSI07zKCmjiTXTWIhQSSd
LjpXk/A8bPLeqOKZHDzdhOd/ra6h+w03xm45eDUGsDvAL3Zb2zr01En0iRzO
dsjiR3DCCeV05JpvHh/nazGIXbbVVzfJXowTdhGTbxF2Z/Y4Tn0zn2OEapxD
+3s9UK35WQepTX6EkrcZpdfu9jBK65+/kcE6+H3xutmpjWLiGIMo5Yk7u0ud
2lD6tqvTM5cf+Gqw7gYq5eOwHg/QB8feCUe+rBEqHG15pwLBkc+W+uD4dsNx
/+kayKswvE0Uc4yJLnBE+/LsnaBg6eRk4LAkEg6eYLQJt4YlB4YlQhCP7tx9
/GYfLHsSlsu2fyeDoOjwOISlmI36h6VvuiPMTjl+5XGKqwsVoVicYrNGKEYu
8U+kEIpZrDCd4Y3a5/4Q+o8iiMb+Dmi8Btfm5oJbkDk1YxzsftimQvuToOPZ
MZiclSpZkJoxFlLKduE7BFSU5K4BdYAzUFdVwbA0j1Ft1iyoaYb+BFVvG5z7
qhqG5pTAiLQM8YgbUt2ZMCKjFBZtPAqDx1Vp1nYVqKurLgQEKoXnUJnY3Bmf
nQ4FqChz8ngLo3XodJm7wTxfOxyg2pPSRAqobFtI9wAVO4f7EEMGatYE2Hr5
KeqQRNVavoYqPx2NcPdqPbR4qS+J0PzmMUxY9hWGfPoH7jYTuI9E01Bw8UvB
udPX7LEDlwAE7S/gu01TINvjFpWJB1zxBnjTSmHomMqIaVe81w2gnb/5HIF2
jgAsZ+E7CVoJRKKIf6Qm2pA6EQ4/aVf3+llh2vEaLm2eCNnpBbDwUB1CNVGB
3dv6EI4sKYI0oZGHjd5OPLGDFZHQX9U6e221HZiKHsIQ8TZBTeVEyHKrVrlz
YHhuBaQUL4eUojkwNCsb0tS9EZ5SSBm7S9O8l6BV8JR4g5YPnyc7oTVn7pd9
aDUmcu2voe5uDdTUiO/dOnjV5tUp2jham2s2Q1mGW/LHnaYRq5qWrCGbLnEk
nkufCkPGVTkq2eBwmwitdbthfKaqc+QMoUV3KEr2g0HllXBs3QQYkarqy1qq
FbsoP7nXQJXfdoJqLksQ/G5C1ThF/qdW5elthUfHlkFxug8k5ccOR0/OLEgp
3UFMCBmSWly8b+DaqiLw4D1PHkytvqvUYjLU1tVASma6UrF5MLR0ly679+AR
LR2cnOF3wqoTPYDHZNj8pcaj3I2pnAmyrP4ai4+7jMVEhsVdUHN4K2xcv15c
Xb9+fRwMzZ0qyD9j3hJYUpxhANKTC9NWfYa3Yf3GSjj1tM3IUPmRr/0JrfD4
+HIffDa3WHGZlj8f1pyopcV2niyBQTMoZL65DssLjXtpo9bAkevPTGQ+egmD
SsqM91I9MCJvvV9kYpAIJQeJJDLnbDjbRWTyD0YTdQcyMURnus4sniw9N9Rj
fIegxZFpW2bsMjJ3wA/LpcYRppyaVniKYXWNzIWv/UwMgUq7vadQuAJGaRTm
wsSJeRb0HbjXDN/qbSddgmDrvc0wJt0oOn/hFThfwyH4CgaNXQ7D3UZTUtMr
YHA5h6CZf4if3BAs9PrhzziMXxoQAIQLN5/rIRDSc7jpb/jkagY0X2AKldcp
MNWnlwGTikdg1p9cAaPT3aIH+G6iBZA4in/XNVDSXEoM2fDy7DTIlpjPhPJ9
j+AyRiIwXJZvgGHp6nVPmbBbI45LcTt2cClUuw8uJxlnPwfEJZbhH5cDOS4J
44FwGUlY9rNYlU8vroMxOFlxZ8H4yjvQ7AWpEju3Mq1wJUeVt/kuVI3PMp6X
1l0GlG29DU3K2owYVFuhblsppKs5+swLDfCDDarjt0BKhrIxPYU4VX+roYrW
aNegmsShKr94QOXTl010ej11rrs0qPXcizdNr+Hm52MhQ6gnd+Y42Hq7CRSq
QkUr1extqYODCwvQpSNdkKmi4W5PPlQcuIeSgOzpMlhxRtgMt1cUqplQASy9
2SRzKBUuOKQn6WhLGgq2EoZkZeiZ0bCyXeYkPQKgVX6qjfuvyP/6v0XwTfSB
r5GKJGLYvXz7CXx9qQ5T7IaMXdE7b/MdqJSq0Q0ZZZvhhqETQ8UuWayI3UMG
dpVBMBe2716KhoKyYPNh/pf34czVCGhcBLGYzs9TzTNtF6nQCcRIY0P1Iogz
FYhHwrDSHRzEtOrWVRBbZy09BeL8ikMxA+KsWQf8gfjXoQMWPy33dsOkLLcc
x8dsuAaN3tAdUOLjbXkAhxdxsJL12gZPTq60gHbSJsGjcv8LT505oDhir87O
MdqXPhrW320JgNgdMCQ7S037s2HYmIgjdsMXl7uO2P6OiFUQ8hlYfU8NMrfb
UhMx2qS9w6v2i3Y/ZPHZyEIWbcMH+4xpjFvw/bMrjcFAlu/Wkz7RxYU+s3+v
7r4Ntp48GF64UcI2JMhmz7ZBtgmuV6j2pY2CtXdDULJdgyzHijJvBd3DNm8j
D1RqQm8Eqk/kvHY7tT2GgzNzhGnohvTi1XIdCB/xD9T+8tgIDI7Ab+vDfTAr
x2MHqV5rsgJVPJc5V/qSQgGpO3uOD0i5ObtMmLN+QWoxZ3Olo19QKeZBWrjg
cBRBmuQDUjQ0PNO/4Km/+RbEcHGKG/+7hNN4pWfbnhyFubmIhzQYkbNKKjoH
jP5M8RA9SY03dsKM0gUakubUHSG5CkombNBw97Nib/rAOqCx9jrUNXZoR3tg
hLZC3fYyyGDeAfKT+apR5iZwF8LQsWEhNIGq7ngOJyYbhkTm+P1QvsoADe6O
MxErsWFaHCPSJsKQcooaiCiQnWLbIwfkeA5krVB4+ZS+CRHKV/TCRTQLwuwa
ogHa4fnJhZDvMYbPDCFux8/fsiP6F6oCb5se+811JAGqH2qecZo7KtV4UvYK
lplZpbBw22mofdMhCwwMZS+8PEM+2Qwor34EbX6VLXfOjpHO2ShAGWkcJJQT
7FCW0V40M3pncPxlFHBMDlfoeAlnl4qZlSC+p2AJnHnR4GM5/EYVwc2WgCrX
xGqGChpJL5gJm04/gJkcq/lL2aJWErTUboIStaiVW3EZGgwPmg9M2drWiAxj
bStsmPb3C1M8qw5ThoxfddyV1Kd5Q0IsRd1zxDa1tMskQvgVfxNin71qkgEQ
mFsoMGINZvaDjlffwaqiNGmP5i88CF/PsqA1LLB6oenOUVg3s0BN2VABZkPW
2MUwXIHVU/SxBazQZAYBeIpWwY0mB7C+hMGjeSzABhk4FQWw0hYkdDDFMljp
CKZYBeu+oBCIeGm4tMaYFXkyoDDLEyYCaXsXxo3WntwA03JlSfFqkVeBTgFD
AU88emN1sVTYGBc1/8xLjCqwAK/utjU8qmynrLE7gCeYjGktjIEoprBHTQ0V
e3iQcM9jj7KAgLcRrq4fg6tYaj0/nnAnn/jvggdfsrrW9vRb2DR5JAJPF8mR
R/Zq2+P9MCXbGHg9+RWw9kSt7rx72k448ul4pevEMzkrHfdMEqFDw9+AIPB3
BLFmREcMEBRZLu0CVlRX4YZzYX9ww612uOXODHY24TZuxbGQ4MYOEvSBm5jT
dxPckhXnvU034fOxGeZ6fMgqrp8u6TZsnppjuH3MAdWMnG+B+9XTYaQaf90Z
o2FY7lwYWrQUUgpnQqpQJDxy3j0J08Xkz8clUCN3exUMKi5yDSSZEPP2wjXn
LKQlFpikjQVg0bkLHFiJqnVMz3BVawdUuHgyEreaeMKz33lu887whKedYNwe
Njk4POHQ2VxTCeOz3CHgCfcgonydvfJQuxi9jVdh87hMiUwyzvQGoY4G+KFy
JuSl0QahBL1BKGVMJfaHijYmUuFg5/0gsPMVDM7PE+UZ3sth+fPFu0MLFwjO
VqzYCLMWrxf/VcAwHWZSDEMLFuATkFK8Cb1k5PDrAZyRUhNEDwZnuLodLM5U
cTacJfnD2YGA0OqnAIEa5F7VJGPvTeCZ64fqcnNtJYzLdBN+DGjhfKAdXt08
AcsqpsOI9EwYgbNNTyakZpbB4k1yY6TuFp0fQTgaPPZjGFK0JA5SipaIRk2o
WA87dh+ASfM34BVIHbNMPHz8+HHR5+MnTsPcbd93ArNfBGN7waBxqw3fjTtN
zDPWah2FlPRji9lNMc/0L5yghUux4UMrwQ4t2u/KjYL4ALBiIQfdC6u/dIbO
r1WZ9kNUlHfCaHYC39NhbIw3Wkm0JlMnOPMnSAiI/weXTBJoRW2Tj3t4QoUA
WWU2CCB7+yDQSyAwqHw7pORkG+Ndxmzpxe31EEAP0bsOgeAm4XHEonGrlKM1
HYYXbIA9J291MilPdsTAos+/gQJhZVM0cncBIQ7v8tQZ/tiPcy47+3cfvynz
j5jJyd859qMpMqrc2LTpLoJFB26Gxf7VVRdkG6LK/iTOfpmrRC1eBw2CXHaG
Jzv3WjvNep75CaRnBUEv3Ki3A4Aa6sv/89DhBZqIBQMBgw4Y1LAVUgSrEQKZ
Y7fCmi8CDACJTtx3yRD1qLK+v4X1WBTLYk2008PAw6f6ULdeDAEeResDgZ/A
2r2XrBDYeRSqZs6Cj6svQH2rWkbuHAcJikWDxy6F4WkYgZkNxctPB9AAvQMD
lNiml2AAT74LHQOcIAYGjkBlmZGiJ6NkIey68AzagscA7rkdXFQqp8buzMmQ
Mray12GAJ9fuZRjIVSdIdxEDVV/DudXlkOWhoNFcmLHlGOybGBADBl/7QeH8
Klg3aaTcPpCavUgODeEOA5/uuWhhP25ziyD76540wKVbT+RxPt+o1Zf2Dq9o
x+NnjaIJGG/87rFfMqYNXlyphiUlyiPvdoNHhUJ0wn7sb9uTI1CcacwJRng8
YbOfwtCTVU9wm1flEcv5qebWp8TQ0eBztvDACDB57sazPcxkJTUmk50PRiZE
d7y5BfsXyiBytSyXFJjJlDm0DdYsHe+iNWTFYNXMLnAZH7YdoBQdLk9ZfTJs
Lotae5jLbENYIC7rOMLWejixvFjHnQTkcALsFdN4WcsXpyAlMyOu1zKZQum7
jcm36150O5PNXc21sHeaXGH3O20jRY3U11WUzROKOjViivrt5a6OgbSekRxV
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
6P8H1rR7Vw==\
\>"]]
}, Open  ]],

Cell[TextData[{
 "Now, construct the rational approximation of rational approximation of the \
Gaussian ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 " where the imaginary part of the poles are integers"
}], "Text",
 CellChangeTimes->{{3.64744777332393*^9, 3.647447812066244*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"alphaReMin", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"alphasAtom", "//", "Re"}], "//", "Abs"}], "//", "Min"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaReMax", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"alphasAtom", "//", "Re"}], "//", "Abs"}], "//", "Max"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphaReAv", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"alphaReMin", "+", "alphaReMax"}], ")"}], "/", "2"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.580066880532073*^9, 3.580066957003943*^9}, {
  3.580067152873457*^9, 3.580067156703039*^9}, {3.5800677212923727`*^9, 
  3.580067723642585*^9}, {3.580067805177459*^9, 3.5800678075429277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"alphasAtom", "//", "Length"}]}]], "Input",
 CellChangeTimes->{{3.5829082233239183`*^9, 3.582908225083208*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{
  3.582908225453967*^9, 3.584278978816923*^9, 3.647447815399342*^9, 
   3.647450975765304*^9, 3.647451250594549*^9, 3.647451494554694*^9, 
   3.647451863281348*^9, 3.647451948302701*^9, 3.6907763305413647`*^9, 
   3.690777423260841*^9, 3.690777474795623*^9, 3.690777571919035*^9, 
   3.690777827079589*^9, 3.690778018905266*^9, 3.6907784015747547`*^9, 
   3.6907799354619226`*^9, {3.6907799673246927`*^9, 3.690779991714323*^9}, 
   3.690780171402089*^9, 3.690781850658051*^9, 3.690782969922522*^9, 
   3.690783238729185*^9, 3.6907833674994698`*^9, 3.690783502701329*^9, 
   3.6907837448551188`*^9, 3.6907841242430573`*^9, 3.6907876725299587`*^9, 
   3.6907878198690977`*^9, 3.690787865250579*^9, 3.690787903479842*^9, 
   3.690787941661766*^9, 3.690787974630012*^9, 3.690788018427683*^9, 
   3.690788095432824*^9, {3.690788162637282*^9, 3.690788180732471*^9}, 
   3.6907886696397867`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "alphaReMin", "]"}]], "Input",
 CellChangeTimes->{{3.5829083111127872`*^9, 3.5829083112379093`*^9}, {
  3.582908358030875*^9, 3.5829083848268423`*^9}, {3.5829084200697317`*^9, 
  3.582908420228201*^9}, {3.6907818048909082`*^9, 3.690781837950247*^9}, {
  3.6907829823020697`*^9, 3.690783076398879*^9}, {3.6907837498262043`*^9, 
  3.6907837516548777`*^9}}],

Cell[BoxData["113.73931320607278`"], "Output",
 CellChangeTimes->{
  3.581877402790612*^9, 3.582645426624372*^9, 3.582829422697089*^9, {
   3.582908360632255*^9, 3.582908377782852*^9}, 3.582908420607813*^9, 
   3.584278979368647*^9, 3.647447816431819*^9, 3.647450976360375*^9, 
   3.647451251989829*^9, 3.6474514945707283`*^9, 3.64745186331046*^9, 
   3.6474519483378153`*^9, 3.690776330614916*^9, 3.690777423345278*^9, 
   3.690777474881237*^9, 3.6907775720061398`*^9, 3.690777827122122*^9, 
   3.6907780189652033`*^9, 3.690778401644343*^9, 3.690779935480988*^9, {
   3.690779967352209*^9, 3.6907799917466173`*^9}, 3.6907801714242067`*^9, 
   3.690781852120041*^9, {3.690782976417201*^9, 3.690783076686067*^9}, 
   3.690783367518862*^9, 3.690783502720375*^9, {3.6907837460018167`*^9, 
   3.690783752119891*^9}, 3.6907839028671103`*^9, 3.690784125683008*^9, 
   3.690787673534754*^9, 3.6907878199550533`*^9, 3.690787865270913*^9, 
   3.690787903501395*^9, 3.690787941695982*^9, 3.690787974660211*^9, 
   3.690788018460438*^9, 3.690788095452611*^9, {3.6907881626593847`*^9, 
   3.6907881807520123`*^9}, 3.690788669721409*^9}]
}, Open  ]],

Cell["\<\
Redefining poles, finding residues through convex optimization\
\>", "Text",
 CellChangeTimes->{{3.581877526971443*^9, 3.581877541953773*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gamma", "=", " ", 
   RowBox[{
    RowBox[{"-", "alphaReMin"}], "+", 
    RowBox[{"I", " ", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "22"}], ",", "22"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.580493784248539*^9, 3.580493823437613*^9}, {
   3.580493889069625*^9, 3.580493890251884*^9}, {3.5807658590038033`*^9, 
   3.5807658606411257`*^9}, {3.580765917018282*^9, 3.580765918487606*^9}, {
   3.580766174848198*^9, 3.5807661768037453`*^9}, {3.580767142230256*^9, 
   3.580767168386551*^9}, {3.6474508292982283`*^9, 3.6474508396393843`*^9}, 
   3.690783088973936*^9, 3.690783756453965*^9, {3.690788553074875*^9, 
   3.690788554451459*^9}, {3.690788632359934*^9, 3.69078863356583*^9}, 
   3.6907886977283897`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N1", " ", "=", " ", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts1", " ", "=", " ", 
   RowBox[{"60", " ", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"-", "N1"}], ",", "N1"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "N1"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N2", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts2", " ", "=", " ", 
   RowBox[{
    RowBox[{"90", " ", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "N2"}], "]"}], "/", "N2"}]}], " ", "+", " ", 
    "15"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts3", " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"Reverse", "[", "xPts2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xPts", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"xPts3", ",", "xPts1", ",", "xPts2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tau", " ", "=", " ", 
   RowBox[{"Re", "[", "gamma", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theta", " ", "=", " ", 
   RowBox[{"Im", "[", "gamma", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5800547359912767`*^9, 3.580054865386463*^9}, {
   3.580054951878841*^9, 3.580055103550338*^9}, {3.580055144738554*^9, 
   3.580055144921915*^9}, {3.580055489651844*^9, 3.5800554903615627`*^9}, {
   3.580060663685458*^9, 3.580060692872898*^9}, {3.5800607304312077`*^9, 
   3.580060745735121*^9}, {3.580062482576008*^9, 3.5800624853412313`*^9}, {
   3.580063464352975*^9, 3.580063464470846*^9}, {3.580064666800221*^9, 
   3.580064694923588*^9}, {3.5800647300531054`*^9, 3.580064730355064*^9}, {
   3.580064880321546*^9, 3.580064901830182*^9}, {3.580065029062016*^9, 
   3.580065029803073*^9}, {3.580067020939775*^9, 3.580067020992249*^9}, {
   3.580067383571062*^9, 3.58006738436933*^9}, {3.580067426402013*^9, 
   3.580067426544202*^9}, {3.58006807150697*^9, 3.580068074800426*^9}, {
   3.58006845244867*^9, 3.58006845394496*^9}, {3.580068611682322*^9, 
   3.580068614881385*^9}, {3.58006865544382*^9, 3.580068655680863*^9}, {
   3.580068700350164*^9, 3.580068708120749*^9}, {3.580164577003148*^9, 
   3.580164590416048*^9}, {3.580164987374432*^9, 3.5801649899673023`*^9}, {
   3.58016510772403*^9, 3.5801651596125183`*^9}, {3.580165214701185*^9, 
   3.580165333378281*^9}, {3.580166443526325*^9, 3.580166447725009*^9}, {
   3.580166504686063*^9, 3.580166506363096*^9}, 3.580227489952715*^9, {
   3.58022787867339*^9, 3.5802278791763287`*^9}, {3.580227981776928*^9, 
   3.580228012309293*^9}, 3.580228048484746*^9, {3.5802281988801107`*^9, 
   3.580228207983292*^9}, {3.580228246326624*^9, 3.580228246510639*^9}, {
   3.580228287902467*^9, 3.580228289213523*^9}, {3.5802283329974422`*^9, 
   3.5802283330835867`*^9}, {3.5802362150385838`*^9, 3.580236224637343*^9}, {
   3.580236710993351*^9, 3.580236730020256*^9}, {3.5802368136300993`*^9, 
   3.5802368229632273`*^9}, {3.580236930776188*^9, 3.580236963367078*^9}, 
   3.5802375115829563`*^9, {3.5802376364110527`*^9, 3.580237636466587*^9}, {
   3.580237803710741*^9, 3.5802378213632*^9}, {3.580237923572938*^9, 
   3.5802379236739798`*^9}, {3.580238225763729*^9, 3.580238227323309*^9}, {
   3.58023883609657*^9, 3.5802388433563347`*^9}, {3.580238914942346*^9, 
   3.580238915052299*^9}, {3.58023900681793*^9, 3.580239017726918*^9}, {
   3.580239325754669*^9, 3.5802393906701117`*^9}, {3.580311865686634*^9, 
   3.580311878317986*^9}, {3.580311962067944*^9, 3.5803119779229937`*^9}, {
   3.5807660853131437`*^9, 3.580766098730699*^9}, {3.580766294885189*^9, 
   3.5807663281287737`*^9}, {3.580766364999769*^9, 3.580766376806986*^9}, {
   3.580767341977474*^9, 3.580767343478896*^9}, {3.647450995291491*^9, 
   3.647450997843768*^9}, {3.690783845502652*^9, 3.690783849665105*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"b", " ", "=", " ", 
   RowBox[{
    RowBox[{"gaussian", "/.", 
     RowBox[{"x", "\[Rule]", "xPts"}]}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "120"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Precision", "[", "b", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", "xPts", "]"}], ",", 
       RowBox[{"2", "*", 
        RowBox[{"Length", "[", "tau", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Precision", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", 
       RowBox[{"Length", "[", "xPts", "]"}]}], ",", 
      RowBox[{"1", ";;", 
       RowBox[{"Length", "[", "tau", "]"}]}]}], "]"}], "]"}], " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"xPts", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", 
        RowBox[{"theta", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xPts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"theta", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"tau", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "^", "2"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xPts", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "tau", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", ";;", 
       RowBox[{"Length", "[", "xPts", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tau", "]"}], "+", "1"}], ";;", 
       RowBox[{"2", "*", 
        RowBox[{"Length", "[", "tau", "]"}]}]}]}], "]"}], "]"}], " ", "=", 
   " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"tau", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xPts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], " ", "-", " ", 
           RowBox[{"theta", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"tau", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "^", "2"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "xPts", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", 
       RowBox[{"Length", "[", "tau", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.580068286782942*^9, 3.5800682925453176`*^9}, {
   3.5800684919759912`*^9, 3.580068492432164*^9}, {3.580164610289505*^9, 
   3.580164613385602*^9}, 3.580164751767997*^9, 3.580227473919957*^9, {
   3.580227509195744*^9, 3.580227527121961*^9}, {3.580227810973814*^9, 
   3.580227811100848*^9}, 3.5802279380829077`*^9, 3.6474511753178997`*^9, {
   3.6907836654645243`*^9, 3.690783691528945*^9}, {3.6907837752747602`*^9, 
   3.690783786548025*^9}, {3.690783835505084*^9, 3.690783838087058*^9}, {
   3.690783870533194*^9, 3.690783888758884*^9}, {3.690784162586974*^9, 
   3.690784163727724*^9}}],

Cell[BoxData["116.55944510673943`"], "Output",
 CellChangeTimes->{{3.690783873568233*^9, 3.690783879833799*^9}, 
   3.690783911212008*^9, 3.6907841303519773`*^9, 3.690784531219183*^9, 
   3.690784757511401*^9, 3.690787087543528*^9, 3.6907876776288347`*^9, 
   3.6907878200764437`*^9, 3.6907878653145933`*^9, 3.690787903556126*^9, 
   3.690787941760363*^9, 3.69078797471583*^9, 3.690788018528984*^9, 
   3.690788095496685*^9, {3.690788162719677*^9, 3.6907881808061113`*^9}, 
   3.690788669939206*^9}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{{3.690783873568233*^9, 3.690783879833799*^9}, 
   3.690783911212008*^9, 3.6907841303519773`*^9, 3.690784531219183*^9, 
   3.690784757511401*^9, 3.690787087543528*^9, 3.6907876776288347`*^9, 
   3.6907878200764437`*^9, 3.6907878653145933`*^9, 3.690787903556126*^9, 
   3.690787941760363*^9, 3.69078797471583*^9, 3.690788018528984*^9, 
   3.690788095496685*^9, {3.690788162719677*^9, 3.6907881808061113`*^9}, 
   3.690788669942369*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{"A", ",", "11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{"b", ",", "11"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w1", " ", "=", " ", 
   RowBox[{"LInfinitySolve", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5800645105015697`*^9, 3.580064515262293*^9}, {
  3.580227945196093*^9, 3.580227945699608*^9}, {3.580236831087263*^9, 
  3.58023683171098*^9}, {3.690783890127235*^9, 3.6907839222689734`*^9}, {
  3.6907840387620687`*^9, 3.69078407267206*^9}, {3.6907842000365677`*^9, 
  3.690784203017777*^9}, {3.690784368124655*^9, 3.690784457213599*^9}, {
  3.690784495537676*^9, 3.690784500752075*^9}, {3.690784538006549*^9, 
  3.690784556474496*^9}, {3.690787064402759*^9, 3.690787094199304*^9}, {
  3.6907872448218307`*^9, 3.6907872584508753`*^9}, {3.690787289286132*^9, 
  3.690787313045724*^9}, {3.6907873824283667`*^9, 3.690787382604953*^9}, {
  3.690787431718584*^9, 3.690787471809457*^9}, {3.690787530337001*^9, 
  3.6907875315996017`*^9}, {3.690787580911454*^9, 3.6907875811443377`*^9}, {
  3.690787683785942*^9, 3.690787686809299*^9}, {3.690788143494228*^9, 
  3.690788172909235*^9}}],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming","lpsnf",
   "\"No solution can be found that satisfies the constraints.\"",2,2986,104,
   21130214604299680243,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.69078868268826*^9}],

Cell[BoxData[
 TemplateBox[{
  "Take","take",
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"-\\\", \\\"90\\\"}]\\) \
through \\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"LinearProgramming\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
\\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"41\\\", \\\"\[RightSkeleton]\\\"}]}], \\\
\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\
\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"29\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \
\\\"\[Infinity]\\\"}], \\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \
\\\",\\\", \\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"\[Infinity]\\\"}], \\\",\\\", \
\\\"\[Infinity]\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"41\\\", \\\"\[RightSkeleton]\\\"}]}], \\\
\"}\\\"}]}], \\\"]\\\"}]\\).\"",2,2986,105,21130214604299680243,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.690788682854143*^9}]
}, Open  ]],

Cell["Here a are residues corresponding to new poles", "Text",
 CellChangeTimes->{{3.581877618498399*^9, 3.581877629199936*^9}, 
   3.6474507806096573`*^9, {3.64745084954256*^9, 3.6474508571195087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{
    RowBox[{"w1", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "w1", "]"}], "/", "2"}], "+", "1"}], ";;", 
       RowBox[{"Length", "[", "w1", "]"}]}], "]"}], "]"}], "+", 
    RowBox[{"I", " ", 
     RowBox[{"w1", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", 
        RowBox[{
         RowBox[{"Length", "[", "w1", "]"}], "/", "2"}]}], "]"}], "]"}]}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"-", "a"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.580064552168007*^9, {3.5800647939792624`*^9, 3.580064802288787*^9}, 
   3.580164814413813*^9, {3.5802276249018583`*^9, 3.580227647190359*^9}, {
   3.580227722763144*^9, 3.58022774460341*^9}, {3.5802392851820498`*^9, 
   3.58023928762962*^9}, {3.64745078465265*^9, 3.647450791528576*^9}, {
   3.6907836452691*^9, 3.69078365576073*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"a", "\[IndentingNewLine]", 
 RowBox[{"Precision", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.580388233884884*^9, 3.580388234694058*^9}, {
   3.581857836342203*^9, 3.581857836797014*^9}, 3.647450795220518*^9, {
   3.690783813476169*^9, 3.690783816495811*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"90", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"LinearProgramming", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
                ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
               ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
              "}"}], ",", 
             RowBox[{"{", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )], "}"}], ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], 
               ",", 
               TemplateBox[{"88"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, 
                  FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                  RoundingRadius -> 7]& )], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
              "}"}]}], "]"}]}]}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{199., {7., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{177., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2989, 21130214604299680243, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{199., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2989, 21130214604299680243, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{150., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 2989, 21130214604299680243, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{270., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2989]]], "Output",
 CellChangeTimes->{3.690788684655614*^9}],

Cell[BoxData["11.`"], "Output",
 CellChangeTimes->{3.690788684678755*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690788568883441*^9, 3.69078856960926*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Finally, here is the final rational approximation of ",
 Cell[BoxData[
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], "4"]}]], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"]}]]],
  CellChangeTimes->{
   3.580227831591044*^9, 3.580236293025568*^9, {3.580236462266468*^9, 
    3.580236490443246*^9}, 3.5802365969182453`*^9, 3.580237102420953*^9, 
    3.5802372745641212`*^9, 3.580237309904976*^9, 3.580237357231709*^9, 
    3.580311782139133*^9, 3.580340117176412*^9, 3.580341029105689*^9, 
    3.580386140367421*^9, 3.5803863687519913`*^9, {3.580500232231469*^9, 
    3.580500238004603*^9}, 3.580508029585939*^9, {3.580765805376458*^9, 
    3.5807658081478863`*^9}, {3.580767663370275*^9, 3.58076769949446*^9}, 
    3.580767749257244*^9, 3.5807678081871367`*^9, 3.581857596513002*^9, 
    3.582645408327284*^9, 3.5842789509759417`*^9, 3.585508711194207*^9, 
    3.6474476703124943`*^9}],
 " "
}], "Subsection",
 CellChangeTimes->{{3.647447889081932*^9, 3.647447908502554*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"gamma", ";"}], "\[IndentingNewLine]", 
   RowBox[{"ScientificForm", "[", 
    RowBox[{"%", ",", "30"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.690779722974725*^9, 3.690779736904709*^9}, 
   3.690779798215918*^9, {3.690779839204652*^9, 3.69077983927533*^9}, {
   3.690780025632206*^9, 3.690780026643991*^9}, {3.690783594697838*^9, 
   3.690783594888723*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"22\"\>",
       22,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"21\"\>",
       21,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"20\"\>",
       20,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"19\"\>",
       19,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"18\"\>",
       18,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"17\"\>",
       17,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"16\"\>",
       16,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"15\"\>",
       15,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"14\"\>",
       14,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"13\"\>",
       13,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"12\"\>",
       12,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"11\"\>",
       11,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"10\"\>",
       10,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"9\"\>",
       9,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"8\"\>",
       8,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"7\"\>",
       7,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"6\"\>",
       6,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"5\"\>",
       5,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"4\"\>",
       4,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"3\"\>",
       3,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", 
     RowBox[{
      InterpretationBox["\<\"2\"\>",
       2,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "-", "\[ImaginaryI]"}], ",", 
    InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
     -4.6243433949967142381427733491081419542549339867130112424942071588136764\
74802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
     AutoDelete->True], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", "\[ImaginaryI]"}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"2\"\>",
       2,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"3\"\>",
       3,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"4\"\>",
       4,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"5\"\>",
       5,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"6\"\>",
       6,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"7\"\>",
       7,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"8\"\>",
       8,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"9\"\>",
       9,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"10\"\>",
       10,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"11\"\>",
       11,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"12\"\>",
       12,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"13\"\>",
       13,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"14\"\>",
       14,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"15\"\>",
       15,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"16\"\>",
       16,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"17\"\>",
       17,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"18\"\>",
       18,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"19\"\>",
       19,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"20\"\>",
       20,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"21\"\>",
       21,
       Editable->False], " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     InterpretationBox["\<\"-4.62434339499671423814277334911\"\>",
      -4.624343394996714238142773349108141954254933986713011242494207158813676\
474802432317834750532943188987433824293038818462020375202043904427`113.\
73931320607278,
      AutoDelete->True], "+", 
     RowBox[{
      InterpretationBox["\<\"22\"\>",
       22,
       Editable->False], " ", "\[ImaginaryI]"}]}]}], "}"}],
  ScientificForm[#, 30]& ]], "Output",
 CellChangeTimes->{
  3.647450894438973*^9, 3.647451017126216*^9, 3.647451273226008*^9, 
   3.647451505523179*^9, 3.6474518743395767`*^9, 3.647451959281879*^9, 
   3.6907763451018248`*^9, 3.6907774367668257`*^9, 3.6907774884727917`*^9, 
   3.6907775884878893`*^9, 3.6907778397551947`*^9, 3.6907780331008368`*^9, 
   3.690778415692421*^9, {3.6907797218234797`*^9, 3.690779737266315*^9}, 
   3.690779798797598*^9, {3.690779840476623*^9, 3.6907798426101723`*^9}, {
   3.6907800055093937`*^9, 3.690780035630562*^9}, 3.690780183750721*^9, 
   3.69078337999831*^9, 3.690783514969639*^9, 3.69078363206174*^9, 
   3.690787612959817*^9, 3.6907877157129993`*^9, 3.690787835936029*^9, 
   3.690787877512505*^9, 3.690787917390546*^9, 3.690787952397715*^9, 
   3.690787987439715*^9, 3.6907880289581537`*^9, 3.690788107834337*^9, {
   3.690788164877337*^9, 3.690788188325263*^9}, 3.690788684886104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", ";"}], "\n", 
 RowBox[{"ScientificForm", "[", 
  RowBox[{"%", ",", "30"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6474508952194357`*^9, {3.690779759635397*^9, 3.69077979436281*^9}, {
   3.69078363433922*^9, 3.690783634607753*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{
           InterpretationBox["\<\"90\"\>",
            90,
            Editable->False], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"LinearProgramming", "[", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], "]"}]}]}],
          ScientificForm[#, 30]& ],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{199., {7., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{177., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               ScientificForm[OutputSizeLimit`Dump`x$, 30]]], 2995, 
             21130214604299680243, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{199., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               ScientificForm[OutputSizeLimit`Dump`x$, 30]]], 2995, 
             21130214604299680243, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{150., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               ScientificForm[OutputSizeLimit`Dump`x$, 30]]], 2995, 
             21130214604299680243, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{270., {0., 24.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[2995]]], "Output",
 CellChangeTimes->{{3.690779768284358*^9, 3.690779794905612*^9}, 
   3.690780005538768*^9, 3.690780183780738*^9, 3.690783380020893*^9, 
   3.690783514993491*^9, 3.690783634975685*^9, 3.690787615415245*^9, 
   3.690787718133198*^9, 3.690787835970031*^9, 3.690787877542959*^9, 
   3.690787917421417*^9, 3.690787952428679*^9, 3.690787987470511*^9, 
   3.690788028987981*^9, 3.690788107877421*^9, {3.690788165767067*^9, 
   3.690788189054763*^9}, 3.690788686401413*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rationalFuncExpr", " ", "=", " ", 
   RowBox[{"Re", "[", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"a", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"I", " ", "x"}], " ", "+", " ", "gamma"}], ")"}]}], "]"}], 
    " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotRationalApproxGaussianSubOpt", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rationalFuncExpr", "-", "gaussian"}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "204"}], ",", "204"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.580064579474124*^9, 3.580064598834687*^9}, {
   3.580064643225775*^9, 3.5800646436390257`*^9}, {3.580064755391025*^9, 
   3.580064757140273*^9}, 3.5800648122752*^9, {3.580067468200594*^9, 
   3.580067475570487*^9}, {3.580068093586528*^9, 3.580068102850223*^9}, {
   3.580068329852153*^9, 3.580068352194763*^9}, {3.580068675704802*^9, 
   3.5800686815528507`*^9}, {3.5801648954816837`*^9, 3.580164900257288*^9}, {
   3.5801653842788563`*^9, 3.58016539845504*^9}, {3.5801662448345947`*^9, 
   3.5801662461438847`*^9}, {3.580166293977455*^9, 3.58016629530308*^9}, {
   3.580166541578795*^9, 3.580166544624608*^9}, {3.5802277739023743`*^9, 
   3.580227779044838*^9}, {3.5802363814794493`*^9, 3.5802363820389233`*^9}, {
   3.580236567793229*^9, 3.5802365693928757`*^9}, {3.580239115388936*^9, 
   3.5802391217963247`*^9}, {3.5802393004633102`*^9, 3.580239301359301*^9}, {
   3.5803122238280888`*^9, 3.580312230657344*^9}, {3.580315071372238*^9, 
   3.580315074116662*^9}, {3.580482660255753*^9, 3.58048266463301*^9}, 
   3.580767121328783*^9, 3.580825422065242*^9, {3.582911059046588*^9, 
   3.58291105937294*^9}, {3.647451279504554*^9, 3.647451280567142*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.690788169631814*^9, 3.690788625057828*^9, 
  3.69078871724082*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6907881545115213`*^9, 3.690788154636066*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6907879431998796`*^9, 3.690787943343932*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690787906653447*^9, 3.690787907234784*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690787872130664*^9, 3.690787874223076*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.69078782607922*^9, 3.6907878265546827`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing rational approximations of cos(x) and sin(x)", "Section",
 CellChangeTimes->{{3.647447921696684*^9, 3.647447931423731*^9}, {
  3.647448035551383*^9, 3.64744804176587*^9}}],

Cell[CellGroupData[{

Cell["Getting the Gaussian approximation of cos(x) and sin(x)", "Subsection",
 CellChangeTimes->{{3.6474480211028557`*^9, 3.647448032801536*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gaussianFT", " ", "=", " ", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", " ", "Pi", " ", "I", " ", "x", "  ", "k"}], "]"}], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "/", 
         RowBox[{"(", 
          RowBox[{"d", " ", 
           RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"d", " ", "Pi"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"d", ">", "0"}], "&&", 
       RowBox[{"h", ">", "0"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normalization", "[", 
   RowBox[{"h0_", ",", "d0_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"gaussianFT", "/.", 
      RowBox[{"k", "\[Rule]", "1"}]}], "/.", 
     RowBox[{"d", "\[Rule]", "d0"}]}], "/.", 
    RowBox[{"h", "\[Rule]", "h0"}]}], "//", "N"}]}]}], "Input",
 CellChangeTimes->{{3.64744903478992*^9, 3.647449062329731*^9}, {
  3.647449182097762*^9, 3.647449193615082*^9}, {3.6474517580081873`*^9, 
  3.6474517586729193`*^9}, {3.6474518223190517`*^9, 3.6474518245161533`*^9}, {
  3.647451885062175*^9, 3.647451931780237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcExp", "[", 
   RowBox[{"x_", ",", "d_", ",", "N1_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"d", " ", "Pi"}], "]"}]}], 
   RowBox[{"h", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h", ",", "d"}], "]"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "h", " ", "n", " ", "I"}], "]"}], 
      " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"n", " ", "h"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"d", " ", 
          RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N1"}], ",", "N1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.647449261430581*^9, 3.64744926802883*^9}, {
  3.6474494603616743`*^9, 3.6474494612166853`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcCos", "[", 
   RowBox[{"x_", ",", "d_", ",", "N1_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"d", " ", "Pi"}], "]"}]}], 
   RowBox[{"h", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h", ",", "d"}], "]"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "Pi", " ", "h", " ", "n"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"n", " ", "h"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"d", " ", 
          RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N1"}], ",", "N1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.580331584128703*^9, 3.5803315904792137`*^9}, {
  3.580331738444368*^9, 3.580331739227398*^9}, {3.647449075683709*^9, 
  3.647449077153386*^9}, {3.647449176624298*^9, 3.647449202926734*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funcSin", "[", 
   RowBox[{"x_", ",", "d_", ",", "N1_", ",", "h_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"d", " ", "Pi"}], "]"}]}], " ", 
   RowBox[{"h", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h", ",", "d"}], "]"}]}], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "Pi", " ", "h", " ", "n"}], "]"}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"n", " ", "h"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"d", " ", 
          RowBox[{"h", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{"-", "N1"}], ",", "N1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.580331757732791*^9, 3.5803317611627903`*^9}, {
   3.580332212753644*^9, 3.580332236942094*^9}, {3.647449083131329*^9, 
   3.6474490833962193`*^9}, {3.6474491738483067`*^9, 3.647449174375208*^9}, 
   3.647449209210238*^9, 3.647449528561839*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h0", " ", "=", " ", 
   RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "320"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d0", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotExpErrorGaussian", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"2", " ", "Pi", " ", "x", " ", "I"}], "]"}], "-", 
      RowBox[{"funcExp", "[", 
       RowBox[{"x", ",", "d0", ",", "M", ",", "h0"}], "]"}]}], "//", "Abs"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6474494262623243`*^9, 3.6474494872250977`*^9}, {
  3.64745007811065*^9, 3.647450099244638*^9}, {3.6474512958084297`*^9, 
  3.647451300246251*^9}, {3.647451347657696*^9, 3.6474513478396482`*^9}, {
  3.6907764195424547`*^9, 3.6907764222538424`*^9}, {3.6907774123891163`*^9, 
  3.690777414020895*^9}, {3.690777452374291*^9, 3.690777452586302*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.690777496395702*^9, 3.690777598172002*^9, 
  3.690777847387382*^9, 3.6907780409545727`*^9, 3.690778425809494*^9, 
  3.690780012908784*^9, 3.690780191218727*^9, 3.690783387524313*^9, 
  3.6907835221319*^9, 3.6907877750580873`*^9, 3.690787843275517*^9, 
  3.6907878850236464`*^9, 3.690787925117627*^9, 3.690787959948359*^9, 
  3.690787994832732*^9, 3.690788036295981*^9, 3.690788115766474*^9, 
  3.690788175266667*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690777467788219*^9, 3.690777468182205*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690776426776773*^9, 3.6907764278984013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotExpErrorGaussian", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", 
      RowBox[{"funcCos", "[", 
       RowBox[{"x", ",", "d0", ",", "M", ",", "h0"}], "]"}]}], "//", "Abs"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64744949422138*^9, 3.6474494972095222`*^9}, 
   3.6474501072229967`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Hx5vUDWUf80TtX+Fla9kk4RxRTh2JeTPmTh0D3EzXfwxNwrb+00cvvAeKkdS
W8iDuUfumSUXB/PpKpx1u3AGzdzPomxsvx+jZu6znbMUxg85gP1TgF8l2Yor
vbC9ZpK9/8Tv8K3YXi+JV7X6ULIO21OEsEfSD0Y6YX4+HF345tT6RdS5fNhW
f3TbLSuMc2HJ8ZnW1ebYXg/xyMnN3WoyOH+nhGuWNo3F+ZaFqJW/f3hpYz4V
SL+xf3WXOvUmVSitky0/wKVm3me9E0M3istgPjFQ26vT4N/H/WfHejI59bGH
fBt1KBvsZWa1n62jDuKBm+2nvYJf1Mz3JPD8mv7Qb9SbmO9J0e8jw3Oomf2S
pu0jcz0dy3eQ4i1yp3SS0Rzojgvl3o+jthOCSpfO+QlRWF8FjCwS1B9HUDP3
H9vjsyJMz2NcCrbkfNJ6fhLjX4i/0PnOjCMYZ8P1lY0Gb70H+/vihk/sfHe0
EArq5CZ/dBnsz9+Jl54tXon5eony3jHTv9uja8j41IS0lfPQ8jBfZvbcX+bU
zPvK1fbzOxcTaub8P3Le2a5uLPaHBxFFjV/ctLE8C5K0DyxvVcd8VeTbFvni
PVzsjyy0xl1a1yuN+fig0bIwR6xH6Z+Z+4KD77ZvcjVKovxnOSdK+V+VRPkz
r9yqHZZGzaolLIO0ltEPMS4Lps+Ke8Zfwfp88JjbI2l6AssLIeqrKmfGbjQP
Stcbq85fj+4hai12movtMF8zWeS7XW8loOUhkBNo5KKvJJqPtCu3p7mpUjP3
527917P3SKJ5YPSsxMa3mSPq/5a5vQ4niqmZ9X/9q5pz8DvqVGkoWD958+VE
LK8M/JZFO2/eombWk7Wv2/4HwdSazP2Fc9LvySEs30NSrtw5/XIbuoG06adf
yFxObSEHY5+VXv1kSd2kAhvm9kUVTKJm9teVr+rx5ZrUS5Thy3qT5AZF6mFi
oNBin97erUjHX09m+7p/6K+m1pUCH86pfJmv1IbKkHAlqoSbRm0hBF/zuatX
xVI7K4N1WWXR3Qg0C1SP+a34e4qalUfKxmgXzNyP7UnCg+xXjmc3U+cKwHu7
87fCZYqi8cziDizVtcR8AuA8Cv/iZYzty8GPpWTxKy1q5v5zs7PgkyIP3Ubc
L++1cxpQoL+HIphNV/t4+zc1c35K/Xpi01pIzbyfco8ufW+eTc3cr67otM0/
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
qqbpV3bR+nzo6lkuz07rEq3nU9uuLKmMoGbedyN+Foen7admSUK8zcjqq47o
VDLnxXrDA5OxvDh8H397r5PyYP2tV2vSpvzpFI2nX8lAQfgeLYQg3+1LW6Ko
mfNdu/lhxMdj1L5d5MnalurodVj+D7H6bDwx0BwtD4Uz9+zbOKxTtN7cHj17
PburQ7SexUb1KmjlUzPf45CQ6Q4D8dQsKRgjdfhq0Vk0i5W063XNs23UFhJg
UyVldHEeNXO/K3Ww2u+lQ50qhJ0ZgemLJDA/834y/aA4ofQvra8Irktt61SS
qFmt5O3Oj2/7z/0VjW9MkN2Nqu1YngsBDz4dypn7VzQ/tdn2K5+MRDPfx5o8
04iedlpfEe5LLRX6f6VmtRAF7fzm7Q/R/WS7xbKcpSewvBLkrPp+D9a3i+Zn
wv7lx0dDu2j/BIUWrFdUpWbOv+aEFRbtTW2i+bfPKxr2M5s6tZs8alrVlX6T
mjlfBZySr9EHqb2FsMvAOT7EkZr5vudb/TrjY0S9SR6muK7bukGB2q6RhB4t
n2td1frP3F7SFblhlHEq9XcuOL2oZA0LozYUQnKh608Jr1bR+Tmsq/pZvQ11
pDwcUNl8IW8MNauWFE+q25ksRm3BAvNFWxfeKGyh88OFSLcGg5MJLaLzSuzU
drbn2RbRebLubmOF02YsLwdpb91fzZzVItpv2hVN4frD0SzwE9u5T7mjmY6f
CxUarQ7dudTMfWoO8ZpUdq9Z1P/by9uVsv2aRfMvs2d3Q9xqalYV2RTSkXnJ
FOuzmPe0963DytTM91n/Y9fhzQ1NdD8I4WTDvtWL3lIz79UG2V6zqZFNou+P
zZgDqiP3UTPvk5jZ/a3sJdSpYqC07lBu07gmUf89DrEefJehZt4n16dK8A+/
/kPz8WGDl9R7uz3UzPtS56HMMU0DdBGpqZWd3lTcSMuLw71RCh0vgxtF+3Pb
Gk7sWctG0XkxPoy7eU33b9H+bvqirDUh5rfoexOvJCzsX4suJV7zVUNyhL9F
+U2OqdtEZDWI8ne+HCrtdgAthKTu4S9hYoNo/n0ma3orVtbT8bFhuofWxJ+h
1Mz7lnV/VF20NVoc0ip1bviwqDWV4aim3krrx3Wi+Z+Stg/6P/4SzVd+Rig4
f/v0z1FCEJg8Da5agOaD/c2v1dtSc+l+lIMg5TbSakxt3ETCxEaParX/SNd/
FxEWr80ZmJZD83MgKCnCW2H0h38OFYDCxUItdc77f3YUwnFPtQ+jO7Lp/uKB
uN3SPUalWaLf++DY4JHmWZl0fO9JF/vjuwXxGTS/NHhVyu92vPyW7ldlaHpl
peni90Y0n1sjjmXv2J4uOq+q9qV5HXR4TfPLw7plAxonzdPo79PC7EeSdVH3
FXUHWc7d63mTl0rLK0LUj63T1rU/p/MpgKvBlWf3ZySL2ruwYE1FyKVnNM6D
U5I/TGO2PqX5JODoc/vTGZBA+xNL9u1+/6tU6RHNLwk7JliadP+KpfmU4WPu
IeGYTQ9Ev1/KTM8XyxXuisZz77HrxlOxN6kVIVTHiftySSRtr5XITby8s7z5
InUbydaTPPGf1xlqBWCV31ieKLePzqcAdIcefr7hzlrzf3FmPRwKPsn5ceyf
S3nwcEVZ68ib5/6Z+f5+2dNzLWXFFWoWq3eeXNT9E9f/2UISlL6rDHhX3v5n
Zr1ruWo7WM64b47zZdw24QE//KE5zqf2DI0jHr1xtL4ijA24OW6Z/mOav5OY
fNT/AY5PzHF85ipxfqP8E2l5ebBaNcVQ/nGSOc6P/c3nhc2/Usxx/lbUzzr+
XemlaDxG6i6XSiJSzXH+nxDdP58TXtH6iWSac/3st+/TaFwcUo/GhD0rf22O
v+/sOzuaorvTRfmzso0tI3lv/5l5v9g2dlw+p5tB4xz4zEtu9jfPpP3vJMsm
H5y7zyGLuokUOc4I3749m1oenH0kW5393v1zLh8qr2ZYLbn8nuYXwpbXgRFz
4z/8s4cyNFbZtJll5fyzgjR4yvHmjy/9+M/sXNKrUvcxaH/uP0eJwYuod/vk
ZD79s4AHVsfjvy+P+CT6fT67XDK5O/nzPzPvu5WzfUM631OXykGV1saWuRvy
6HzVEA8xW7uLPdSaLOguMY6pCv7yz3Y88HsxVMFE/yvtrxA44eJbjr36Kvr9
Q/fXZnxxzKfzLQdaTrmjRzVRs36TaNOnRz2Pf6O/NwtMVCN+pWl8p/3hQmq7
n7nyk++i9Tv/y9bwtTY/RPm/xNv3xFZQM/e1Vf9NXc7yKRDlr3LXfLqQX0jr
DxAPWxnh1XuFovzdYxt3Ns4oohaAn/zXXPhBzewfTl3y+NMeP0XrMTTz+qki
mWKa/w/RunOizuAqup9EH/Ow2m9SQstzwWTDstvZH0pE/XceOUL8tFGpaP5v
BSnHGR8sFa2PugEp56IsauZ7P8G9i+Mn/EXdR7yKG54brKV25sIzm9JtedHU
zPnfn5I3dH8nNXOfmDU2I1trdhnNrwABl5P2Zp+lZjWRD3IxujsLMd5LlPdd
+6Y+plyUf1ltiP+rneWi/FccAyZvfkHN3Od/Zeyv4MpV0PbkQWeK+7nEpRWi
9b/19rqZztcqRPljhQ7NMr8rRPPf7jcv8qFpJZ0PIZi1kYXL/KibBHBovWF/
/0dq5j6a/ln7we2hVbQ/TYQ9U3Wl7UZ0N7GJk5P/G49WgmDN/mfh/VWi/Zx/
tnnTnPnVot936ECF6u/z1aL+O7t9fxvyizqyhdz6+W4XGVfzz449pM765agK
b+oALkxIic87mU5dIwAvg9tHJnFraX0BPAu7NLFwBVoR+mVPlx65Q82c37P2
+p7Vb6Vm7rsBNZ7TP0+vo/OjBB+Wbfy9N5CauT8rZzhdGZlfJ+r/MhPbBVkj
60Xzc+XWjG6P7dTMff182tg8uccY/0vOlKhG3+yuF53HAb3ix6bPaBDtp8Pq
jau+H28QnRf7TH6Y7MzBOA+8FqcrKQh/03zisN3jYc2tFdSsdOJ6OuyV+XVq
5nu+5t6xsB81WF4ZHDM8PD0nNNLyKmBfscJacTc1cz9aIDZ39J0Uags5mK1h
1G8h8Ue036ZPG/6tYB66k0xxZMd6BaE5YLirNYDz7Y9oPwvm/TH8wmmicSH8
923D8JFGTaL1zXEtkHVbSs3cdwPbFv5N8sbyZUTm6JsymSvUqWzw4037uOQl
1ucDKzI2+VpZk2g8B8brRDVKNYvi3SmXQ6bpUVvIwu4FvMMB1tTMfbv1h//2
r+7Uvn3EY1Pvcq1zWJ4LDX93WLo/aRatp83Hqo1SfjSLfq8q/qoRsn3UqUqw
7vpneQfNFpqvmxQbWnVen0XNqicrXj6v+OPaIprf7zaTPpFAjAtgSVHU8xMP
qHOF8GmLxr38XGouH2y7zl3QbqMulYHs47JHPVRbaf0iMlflkPtzM7QYMG+3
FXKrqT24YDFpi9Wyw62i/f78VYnxzZutovVsZrd0ZHMGtZoiPCnOVpxeTx3Q
QSZtt+gO5LTR710Lie1JqPo2kTpRAcYGGuSNWkqtK4AotWsvd3hT2wlh9B2V
6BeXqQ35cH3yqVD5l9QWUqCRLnbMsYyaFUXC7PfsuCXVTudTElR/Naxq0aVm
3qMh7uvmm1tTNwmB2//N5JR7u+j8PXXKRvtHcLvo+yQ79LWSzhPM10r875r2
7vwxaHHTmJqXvVifA4fean9V0PwrOm97l1x6tXzWX9H69i7nxNx2pWbeB+07
/MJaT1Az95ubi5NbJ8dSs/KJ/eQWa+98aub9IaaqdzupF/PzIbZzzUCvVodo
/68uuOBoPo+apQyKKR/iDrt3iPKnhEvKp5/HeDHZcmjaBukUal82qK3d+dyq
jNqCDxkz76qcZHeKzuPdo0rdP4ynZt6Xo6RVs5SWdor24+dqGy37/dTM+/pw
lt/+kGtoOTC8n/wlP6NTND/Fp1rGqTdSlwrhlJve8RWCLhrnwTQ759JwM7QY
1E28OLXUmZq574Tyc4K1jneJ9qtlu2TDhgddov3Wnj9tzp28LlH/bybujKjt
QnPBPuxuh4FmN83XS1g+pXZuluhW8nCV6r3YbdTM+2O1ua1EazA1cz9QGHls
5eRn1M4qkCSekrCnpFv0Pdhc0cJJkuoR7W+1t3qbeg2oU1vI2zvOr6bbUzsr
gNeJi0MOe2OcD9pbczxfR1Az94/P1lIfpN5QRymC73iiY1VP7d1CxnM9DwXy
ev/Zp438bL77/f0Ual0OnMornai0ulf0fTJLUD25yI+aeQ/WXLCtOHePWpML
F72PQX5ur6j/lk4pF9Q60K2kbVrrH6fhfaLz7Ppw/Xnhs6iZ+8eiAefrJZv7
ROuf9etiz8igPtH5H5OWs2TDE3QLWXlTKuZ2EbqPyPsTmVrxftoeF5I2ejob
6PWLzu9N8+49274Q4wJQMfilHLsLrQBvFNS2tVxGNxGvRts3xmn9ovxaucc0
9tT0i9ZDblzKnmecAdF5d+hca26P8YBoPY3fpa8/fQU1894rclh71PcwtW8z
CTQNLUq7MyDKP3XIx8lSOQOi+azpkTo7t21A9H1456bRNluRuUn///zwQSPh
+zMFTWrmvPfoCT70xYia+f68nmEz58octBioBMjIb3CkZvbL5pxXuQZbqTVV
IEXgc6H1AOYTgtIKk5XJQVieA+uuNY08egPztZGE6nvV85+gOwl7vMsD5azB
8iu8RngWFGI+AcQk/TC93kgdyQcxsZD+zWJitL4CLJlrmz5RgG4hd06zA7t0
qJn11J2XtvDVVGpmfmyGHBCesBYT9TfSeUqh3RpqrhBabzdHqu3E+hyw/H3f
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
Uw8=
       "]]},
     Annotation[#, "Charting`Private`Tag$213848#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.647449505484641*^9, 3.647450115471998*^9, 3.6474511480831833`*^9, {
   3.647451333936154*^9, 3.64745135877483*^9}, 3.6474515062760077`*^9, 
   3.64745187484265*^9, 3.647451969583104*^9, 3.690776351013081*^9, 
   3.6907774568455763`*^9, 3.690777514791153*^9, 3.6907776184397078`*^9, 
   3.690777865372501*^9, 3.690778060194811*^9, 3.690778449760174*^9, 
   3.6907800301188297`*^9, 3.690780208145348*^9, 3.690783404597443*^9, 
   3.6907835389907*^9, {3.690787859831472*^9, 3.690787885756323*^9}, 
   3.69078793546708*^9, 3.6907879690688334`*^9, 3.690788012513503*^9, 
   3.690788053509891*^9, 3.690788133180402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotExpErrorGaussian", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", 
      RowBox[{"funcSin", "[", 
       RowBox[{"x", ",", "d0", ",", "M", ",", "h0"}], "]"}]}], "//", "Abs"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "14"}], ",", "14"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.64744950589509*^9, 3.647449510585244*^9}, 
   3.6474501190153027`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.647449516737185*^9, 3.6474495392781553`*^9}, 
   3.64745012604386*^9, 3.6474511547723837`*^9, {3.64745134062049*^9, 
   3.64745136543927*^9}, 3.64745150663188*^9, 3.647451874976931*^9, 
   3.647451976827096*^9, 3.690776355021636*^9, 3.6907774633752604`*^9, 
   3.690777529290917*^9, 3.690777633025136*^9, 3.690777879034213*^9, 
   3.690778075629593*^9, 3.690778467920371*^9, 3.6907800315972633`*^9, 
   3.6907802213052998`*^9, 3.6907834183040543`*^9, 3.69078355243787*^9, 
   3.6907880131382513`*^9, 3.690788067488367*^9, 3.6907881382918863`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constructing final rational approximation", "Subsection",
 CellChangeTimes->{{3.647448049822872*^9, 3.647448055221191*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"computeResidues", "[", 
   RowBox[{
   "p_", ",", "func_", ",", "M_", ",", "L_", ",", "h_", ",", "aGauss_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"L1", ",", "L2", ",", "c", ",", "ind", ",", "res"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"L1", " ", "=", " ", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"-", "L"}], ",", 
        RowBox[{"p", "-", "M"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"L2", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"L", ",", 
        RowBox[{"p", "+", "M"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ind", " ", "=", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"L1", ",", "L2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"func", "[", 
          RowBox[{"h", " ", "#"}], "]"}], "&"}], ",", " ", 
        RowBox[{"p", " ", "-", " ", "ind"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{"h", " ", 
        RowBox[{"aGauss", "[", 
         RowBox[{"[", 
          RowBox[{"L", "+", "ind", "+", "1"}], "]"}], "]"}], " ", "*", " ", 
        "c"}], "]"}]}], ";", "\[IndentingNewLine]", "res"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.580828071900773*^9, 3.5808281366639643`*^9}, {
   3.5808282364894447`*^9, 3.58082827955197*^9}, {3.580828310817884*^9, 
   3.5808284374880953`*^9}, 3.5808285468382263`*^9, {3.580828914914596*^9, 
   3.580828915096168*^9}, {3.580829127789275*^9, 3.580829128149096*^9}, 
   3.580829200446706*^9, {3.580830581533143*^9, 3.5808305818506813`*^9}}],

Cell["Construction for sin(2 pi x)", "Text",
 CellChangeTimes->{{3.647448186531571*^9, 3.6474482068339357`*^9}, {
  3.690777948201253*^9, 3.690777951895344*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d0", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h0", " ", "=", " ", 
   RowBox[{"1", "/", "20"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", "11"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", " ", "=", " ", "640"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"norm", " ", "=", 
   RowBox[{
    RowBox[{"h0", "/", 
     RowBox[{"normalization", "[", 
      RowBox[{"h0", ",", "d0"}], "]"}]}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "120"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residuesSin", " ", "=", " ", 
   RowBox[{"norm", "  ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"computeResidues", "[", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"-", "2"}], " ", "Pi", " ", "#"}], "]"}], "&"}], ",", "M", 
        ",", "L", ",", "h0", ",", "a"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"-", "M"}], "-", "L"}], ",", 
        RowBox[{"M", "+", "L"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.580831372976596*^9, 3.580831376614959*^9}, {
   3.580909840303685*^9, 3.58090985982876*^9}, {3.581859526113285*^9, 
   3.581859545214396*^9}, {3.5828297027218637`*^9, 3.582829704494635*^9}, 
   3.6474496020080137`*^9, {3.6474496841520557`*^9, 3.647449721773219*^9}, {
   3.647449756887315*^9, 3.6474497746515083`*^9}, {3.647449928442309*^9, 
   3.647449930914919*^9}, {3.647450592725622*^9, 3.647450641650564*^9}, {
   3.647450712334487*^9, 3.6474507162358103`*^9}, 3.64745141757279*^9, {
   3.6907775363063583`*^9, 3.690777538546205*^9}, {3.6907778071236477`*^9, 
   3.69077781130084*^9}, {3.690777929431403*^9, 3.690777932276779*^9}, {
   3.69077799778419*^9, 3.6907779980432873`*^9}, {3.6907783743907757`*^9, 
   3.690778393736216*^9}}],

Cell[CellGroupData[{

Cell[BoxData["norm"], "Input",
 CellChangeTimes->{{3.64745139192502*^9, 3.647451392364512*^9}}],

Cell[BoxData["1.1037307629915182882740509739960543811321258544921875`120."], \
"Output",
 CellChangeTimes->{
  3.647451392684825*^9, 3.6474514428915787`*^9, 3.647451506740871*^9, 
   3.6474518751048613`*^9, 3.647451977223948*^9, 3.6907763553035603`*^9, 
   3.6907775297024393`*^9, 3.6907776334167013`*^9, 3.690777879189147*^9, 
   3.690777959429682*^9, {3.690778000974024*^9, 3.690778005169962*^9}, 
   3.690778075822097*^9, 3.6907784684615*^9, 3.690780221537066*^9, 
   3.6907834185877113`*^9, 3.690783552661714*^9, 3.690788067773965*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tau", " ", "=", " ", 
   RowBox[{"-", "alphaReMin"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polesCos", " ", "=", " ", 
   RowBox[{"h0", " ", 
    RowBox[{"(", 
     RowBox[{"tau", " ", "+", " ", 
      RowBox[{"I", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "M"}], "-", "L"}], ",", 
         RowBox[{"M", "+", "L"}]}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rationalFuncSin", " ", "=", " ", 
   RowBox[{
    RowBox[{"residuesSin", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I", " ", "x"}], " ", "+", "polesCos"}], ")"}]}], "//", 
    "Total"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.580831459325493*^9, 3.580831476490184*^9}, {
  3.580831518460182*^9, 3.5808315194907007`*^9}, {3.580831552323456*^9, 
  3.580831552984909*^9}, {3.581859559671568*^9, 3.581859560573861*^9}, {
  3.647449584387423*^9, 3.647449594775078*^9}, {3.6474496444808292`*^9, 
  3.647449657262252*^9}, {3.647449702892956*^9, 3.647449733777042*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotRationalApproxSin", "=", 
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", " ", 
       RowBox[{"Re", "[", "rationalFuncSin", "]"}]}], "//", "Abs"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "28"}], ",", "28"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.581859478064567*^9, 3.5818594816784983`*^9}, {
  3.5818595695754642`*^9, 3.581859593844192*^9}, {3.5818597700358887`*^9, 
  3.581859772808807*^9}, {3.6474499548716307`*^9, 3.647449958837565*^9}, {
  3.6474500219791927`*^9, 3.647450044421598*^9}, {3.647450245618308*^9, 
  3.647450273871772*^9}, {3.690777979223391*^9, 3.690777991447838*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690777820606365*^9, 3.690777821036705*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690777561233547*^9, 3.690777561896414*^9}}],

Cell["Construction for cos(2 pi x)", "Text",
 CellChangeTimes->{{3.647448212340876*^9, 3.647448214881939*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"norm", " ", "=", " ", 
   RowBox[{"h0", "/", 
    RowBox[{"normalization", "[", 
     RowBox[{"h0", ",", "d0"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residuesCos", " ", "=", " ", 
   RowBox[{"norm", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"computeResidues", "[", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "Pi", " ", "#"}], "]"}], "&"}], ",", "M", ",", 
        "L", ",", "h0", ",", "a"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", 
        RowBox[{
         RowBox[{"-", "M"}], "-", "L"}], ",", 
        RowBox[{"M", "+", "L"}]}], "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.647448266223233*^9, 3.64744827124996*^9}, {
  3.6474514506188602`*^9, 3.6474514662097282`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rationalFuncCos", " ", "=", " ", 
   RowBox[{
    RowBox[{"residuesCos", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"I", " ", "x"}], " ", "+", "polesCos"}], ")"}]}], "//", 
    "Total"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6474482866230173`*^9, 3.647448310593943*^9}, {
  3.647448348402828*^9, 3.6474483487371273`*^9}, {3.6474506696047993`*^9, 
  3.6474506876557198`*^9}, {3.647450746921528*^9, 3.647450747103047*^9}, {
  3.647451470451823*^9, 3.6474514740812063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRationalApproxSin", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "Pi", " ", "x"}], "]"}], "-", " ", 
      RowBox[{"Re", "[", "rationalFuncCos", "]"}]}], "//", "Abs"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "28"}], ",", "28"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.647448314222414*^9, 3.6474483187773523`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6907784869644957`*^9, 3.6907802329794273`*^9, 
  3.6907834306217546`*^9, 3.690783565930682*^9, 3.690788075180312*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{3200, 1685},
WindowMargins->{{1857, -1857}, {-833, Automatic}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.5, 1.5 Inherited],
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 163, 2, 148, "Section"],
Cell[745, 26, 218, 4, 71, "Text"],
Cell[966, 32, 654, 17, 175, "Input"],
Cell[1623, 51, 1884, 50, 490, "Input"],
Cell[3510, 103, 3801, 101, 931, "Input"],
Cell[7314, 206, 684, 16, 175, "Input"],
Cell[8001, 224, 707, 17, 175, "Input"],
Cell[8711, 243, 783, 19, 301, "Input"],
Cell[9497, 264, 2127, 51, 616, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11661, 320, 192, 2, 148, "Section"],
Cell[11856, 324, 2064, 55, 553, "Input"],
Cell[13923, 381, 1540, 39, 427, "Input"],
Cell[15466, 422, 1599, 43, 364, "Input"],
Cell[17068, 467, 2518, 69, 679, "Input"],
Cell[19589, 538, 3033, 80, 679, "Input"],
Cell[22625, 620, 2575, 67, 679, "Input"],
Cell[25203, 689, 974, 26, 175, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26214, 720, 1114, 24, 203, "Section"],
Cell[27331, 746, 1179, 24, 185, "Text"],
Cell[28513, 772, 144, 3, 111, "Input"],
Cell[CellGroupData[{
Cell[28682, 779, 511, 11, 111, "Input"],
Cell[29196, 792, 1953, 33, 186, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31186, 830, 769, 17, 175, "Input"],
Cell[31958, 849, 483, 7, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32478, 861, 4935, 100, 679, "Input"],
Cell[37416, 963, 825, 12, 111, "Output"]
}, Open  ]],
Cell[38256, 978, 1134, 23, 130, "Text"],
Cell[39393, 1003, 209, 3, 124, "Text"],
Cell[CellGroupData[{
Cell[39627, 1010, 749, 19, 175, "Input"],
Cell[40379, 1031, 11842, 208, 418, "Output"]
}, Open  ]],
Cell[52236, 1242, 94, 1, 111, InheritFromParent],
Cell[52333, 1245, 92, 1, 111, InheritFromParent],
Cell[CellGroupData[{
Cell[52450, 1250, 1754, 34, 175, "Input"],
Cell[54207, 1286, 92122, 1518, 418, 56423, 939, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[146344, 2807, 1140, 24, 130, "Text"],
Cell[147487, 2833, 761, 21, 238, "Input"],
Cell[CellGroupData[{
Cell[148273, 2858, 150, 3, 111, "Input"],
Cell[148426, 2863, 938, 14, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149401, 2882, 395, 6, 111, "Input"],
Cell[149799, 2890, 1124, 16, 111, "Output"]
}, Open  ]],
Cell[150938, 2909, 152, 3, 71, "Text"],
Cell[151093, 2914, 780, 16, 111, "Input"],
Cell[151876, 2932, 3858, 73, 553, "Input"],
Cell[CellGroupData[{
Cell[155759, 3009, 3708, 105, 553, "Input"],
Cell[159470, 3116, 499, 7, 111, "Output"],
Cell[159972, 3125, 491, 7, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160500, 3137, 1315, 25, 238, "Input"],
Cell[161818, 3164, 253, 6, 51, "Message"],
Cell[162074, 3172, 4802, 71, 202, "Message"]
}, Open  ]],
Cell[166891, 3246, 203, 2, 71, "Text"],
Cell[167097, 3250, 967, 26, 175, "Input"],
Cell[CellGroupData[{
Cell[168089, 3280, 280, 4, 175, "Input"],
Cell[168372, 3286, 10977, 264, 396, "Output"],
Cell[179352, 3552, 73, 1, 111, "Output"]
}, Open  ]],
Cell[179440, 3556, 91, 1, 111, InheritFromParent],
Cell[CellGroupData[{
Cell[179556, 3561, 1064, 23, 157, "Subsection"],
Cell[CellGroupData[{
Cell[180645, 3588, 413, 9, 175, "Input"],
Cell[181061, 3599, 18621, 454, 994, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199719, 4058, 262, 6, 175, "Input"],
Cell[199984, 4066, 8834, 221, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208855, 4292, 1825, 34, 175, "Input"],
Cell[210683, 4328, 123, 2, 111, "Output"]
}, Open  ]],
Cell[210821, 4333, 94, 1, 111, InheritFromParent],
Cell[210918, 4336, 94, 1, 111, InheritFromParent],
Cell[211015, 4339, 92, 1, 111, InheritFromParent],
Cell[211110, 4342, 92, 1, 111, InheritFromParent],
Cell[211205, 4345, 93, 1, 111, InheritFromParent]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211347, 4352, 190, 2, 148, "Section"],
Cell[CellGroupData[{
Cell[211562, 4358, 145, 1, 103, "Subsection"],
Cell[211710, 4361, 1424, 38, 238, "Input"],
Cell[213137, 4401, 1051, 32, 111, "Input"],
Cell[214191, 4435, 1104, 31, 111, "Input"],
Cell[215298, 4468, 1187, 33, 111, "Input"],
Cell[CellGroupData[{
Cell[216510, 4505, 1121, 26, 301, "Input"],
Cell[217634, 4533, 473, 7, 111, "Output"]
}, Open  ]],
Cell[218122, 4543, 92, 1, 111, InheritFromParent],
Cell[218217, 4546, 94, 1, 111, InheritFromParent],
Cell[CellGroupData[{
Cell[218336, 4551, 574, 16, 111, "Input"],
Cell[218913, 4569, 40909, 685, 429, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259859, 5259, 572, 16, 111, "Input"],
Cell[260434, 5277, 604, 8, 111, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261087, 5291, 129, 1, 103, "Subsection"],
Cell[261219, 5294, 1794, 44, 553, "Input"],
Cell[263016, 5340, 161, 2, 70, "Text"],
Cell[263180, 5344, 1976, 47, 427, "Input"],
Cell[CellGroupData[{
Cell[265181, 5395, 95, 1, 111, "Input"],
Cell[265279, 5398, 539, 8, 175, "Output"]
}, Open  ]],
Cell[265833, 5409, 1076, 28, 238, "Input"],
Cell[266912, 5439, 837, 18, 111, "Input"],
Cell[267752, 5459, 92, 1, 111, InheritFromParent],
Cell[267847, 5462, 92, 1, 111, InheritFromParent],
Cell[267942, 5465, 110, 1, 70, "Text"],
Cell[268055, 5468, 845, 23, 175, "Input"],
Cell[268903, 5493, 522, 12, 111, "Input"],
Cell[CellGroupData[{
Cell[269450, 5509, 507, 13, 111, "Input"],
Cell[269960, 5524, 174, 2, 111, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

