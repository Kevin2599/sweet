#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Understanding the rational approximation of the exponential integrator (REXI)
\end_layout

\begin_layout Standard
\align center

\series bold
!!!THIS IS A PRELIMINARY, NON PROOF-READ DOCUMENT!!!
\end_layout

\begin_layout Author
Martin Schreiber <M.Schreiber@exeter.ac.uk> et.
 al.
\end_layout

\begin_layout Standard
This document serves as the basis for implementing the rational approximation
 of the exponential integrator (REXI).
 Here, we purely focus on the linear part of the shallow-water equations
 (SWE) and show the different steps to approximate solving this linear part
 with an exponential integrator.
 This paper mainly summarises previous work on REXI.
\end_layout

\begin_layout Section
Problem formulation
\end_layout

\begin_layout Standard
We use the advective formulation of the SWE with a full linearization with
 perturbation (see 
\begin_inset CommandInset citation
LatexCommand cite
key "Formulations of the shallow-water equations"

\end_inset

) with 
\begin_inset Formula $U:=(h,u,v)^{T}$
\end_inset

, yielding
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L(U):=\left(\begin{array}{ccc}
 & H\delta_{x} & H\delta_{y}\\
g\delta_{x} &  & -f\\
g\delta_{y} & f
\end{array}\right)U
\]

\end_inset


\end_layout

\begin_layout Standard
Here, we neglect all non-linear terms, assume only small perturbations (hence
 negligible ones) around the average surface height and negligible non-linear
 terms.
\end_layout

\begin_layout Standard
Then, the time evolution of the PDE with the subscript 
\begin_inset Formula $t$
\end_inset

 denoting the derivative in time is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
U_{t}:=L(U).
\]

\end_inset


\end_layout

\begin_layout Standard
We continue writing the linear operator in matrix-style 
\begin_inset Formula $L$
\end_inset

 and applying 
\begin_inset Formula $L$
\end_inset

 on 
\begin_inset Formula $U$
\end_inset

 as 
\begin_inset Formula $L.U$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
U_{t}:=L.U
\]

\end_inset


\end_layout

\begin_layout Standard
It is further worth noting, that this system describes an oscillatory system,
 hence the operator 
\begin_inset Formula $L$
\end_inset

 has imaginary eigenvalues.
\end_layout

\begin_layout Section
Exponential integrator
\end_layout

\begin_layout Standard
Linear systems of equations are well known to be solvable with exponential
 integrators for arbitrary time step sizes via
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
U(t):=e^{Lt}U(0),
\]

\end_inset

see e.g.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Nineteen Dubious Ways to Compute the Exponential of a Matrix"

\end_inset

.
 However, this is typically quite expensive to compute and analytic solutions
 only exist for some simplified system of equations, see e.g.
 
\begin_inset CommandInset citation
LatexCommand cite
key "Formulations of the shallow-water equations"

\end_inset

 for f-plane shallow-water equations.
 These exponential integrators can be approximated with rational functions
 and this paper is on giving insight into this approximation.
\end_layout

\begin_layout Section
Underlying idea of rational approximation
\end_layout

\begin_layout Standard
Terry et.
 al.
 developed a rational approximation of the exponential integrator, see 
\begin_inset CommandInset citation
LatexCommand cite
key "High-order time-parallel approximation of evolution operators"

\end_inset

.
 First, we like to get more insight into it with a one-dimensional formulation
 before applying REXI to a rational approximation of a linear operator.
 Our main target is to find an approximation of an operator with an 
\emph on
exponential shape
\emph default
, in our case 
\begin_inset Formula $e^{ix}$
\end_inset

, which (in one-dimension) is given by a function 
\begin_inset Formula $f(x)$
\end_inset

.
 We will end up in an approximation given by the following rational approximatio
n:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
e^{ix}\approx\sum_{n=-N}^{N}\frac{\beta_{n}}{ix-\alpha_{n}}
\]

\end_inset

with complex coefficients 
\begin_inset Formula $\alpha_{n}$
\end_inset

 and 
\begin_inset Formula $\beta_{n}$
\end_inset

.
\end_layout

\begin_layout Subsection
Step A) Approximation of solution space
\end_layout

\begin_layout Standard
First, we assume that we can use Gaussian curves as basis functions for
 our approximation and they are somehow naturally related to this problem
 (Gaussians are given by exponential functions).
 So first, we find an approximation of one of our underlying Gaussian basis
 function
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\psi_{s}(x):=(4\pi)^{-\frac{1}{2}}e^{-x^{2}/(4s^{2})}
\]

\end_inset


\end_layout

\begin_layout Standard
In this formulation, 
\begin_inset Formula $s$
\end_inset

 can be interpreted as the horizontal 
\begin_inset Quotes eld
\end_inset

stretching
\begin_inset Quotes erd
\end_inset

 of the basis function.
 Note the similarities to the Gaussian distribution, but by dropping certain
 parts of the vertical scaling as it is required for probability distributions.
 We can now approximate our function 
\begin_inset Formula $f(x)$
\end_inset

 with a superposition of basis functions 
\begin_inset Formula $\psi_{s}(x)$
\end_inset

 by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(x)\approx\sum_{m=-M}^{M}b_{m}\psi_{s}(x+ms)
\]

\end_inset

with 
\begin_inset Formula $M$
\end_inset

 controling the interval of approximation (~size of 
\begin_inset Quotes eld
\end_inset

domain of interest
\begin_inset Quotes erd
\end_inset

) and 
\begin_inset Formula $s$
\end_inset

 the accuracy of integration (~resolution in 
\begin_inset Quotes eld
\end_inset

domain of interest
\begin_inset Quotes erd
\end_inset

).
 The 
\begin_inset Formula $s$
\end_inset

 value depends on the max.
 frequency of the oscillations generated by the linear operator.
 To compute the coefficients 
\begin_inset Formula $b_{m}$
\end_inset

, we rewrite the previous equation in Fourier space with
\begin_inset Formula 
\[
\frac{\hat{f}(\xi)}{\hat{\psi_{h}}(\xi)}:=\sum_{m:=\infty}^{\infty}b_{m}e^{2\pi imh\xi},
\]

\end_inset

see 
\begin_inset CommandInset citation
LatexCommand cite
key "High-order time-parallel approximation of evolution operators"

\end_inset

, page 11.
 We can rearrange this equation which allows us to directly compute the
 desired coefficients 
\begin_inset Formula 
\[
b_{m}:=h\intop_{-\frac{1}{2h}}^{\frac{1}{2h}}e^{-2\pi imh\xi}\frac{\hat{f}(\xi)}{\hat{\psi_{h}}(\xi)}d\xi.
\]

\end_inset

Since we are only interested in approximating 
\begin_inset Formula $f(x):=e^{ix}$
\end_inset

, we can simplify the equation by using the response in frequency space
 
\begin_inset Formula $\hat{f}(\xi):=\delta(\xi-\frac{1}{2\pi})$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
b_{m}:=h\,e^{-2\pi imh\frac{1}{2\pi}}\frac{\hat{f}(\frac{1}{2\pi})}{\hat{\psi_{h}}(\frac{1}{2\pi})}=h\,e^{-imh}\hat{\psi_{h}}(\frac{1}{2\pi})^{-1}.
\]

\end_inset

We finally require to compute 
\begin_inset Formula $\hat{\psi_{h}}(\xi)$
\end_inset

 which we derive in the following part:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{\psi_{h}}(\xi):=\intop_{-\infty}^{\infty}\frac{1}{\sqrt{4\pi}}e^{-\left(\frac{x}{2h}\right)^{2}}e^{-2\pi ix\xi}dx
\]

\end_inset


\begin_inset Formula 
\[
=\frac{1}{\sqrt{4\pi}}\intop_{-\infty}^{\infty}e^{-\left(\left(\frac{x}{2h}\right)^{2}+2\pi ix\xi+(2h\pi i\xi)^{2}-(2h\pi i\xi)^{2}\right)}dx
\]

\end_inset


\begin_inset Formula 
\[
=\frac{1}{\sqrt{4\pi}}e^{-(2h\pi\xi)^{2}}\intop_{-\infty}^{\infty}e^{-\left(\frac{x}{2h}+2h\pi i\xi\right)^{2}}dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\frac{1}{\sqrt{4\pi}}e^{-(2h\pi\xi)^{2}}\intop_{-\infty}^{\infty}e^{-\left(\frac{x}{2h}\right)^{2}}dx
\]

\end_inset

Then, evaluting the integral yields 
\begin_inset Formula $\intop_{-\infty}^{\infty}e^{-\left(\frac{x}{2h}\right)^{2}}dx=h\,\sqrt{4\pi}$
\end_inset

 and specialising on the case 
\begin_inset Formula $\xi:=\frac{1}{2\pi}$
\end_inset

, we get
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\hat{\psi_{h}\left(\xi\right)}:=\frac{1}{\sqrt{4\pi}}e^{-(2h\pi\frac{1}{2\pi})^{2}}h\sqrt{4\pi}=h\,e^{-h^{2}}.
\]

\end_inset

Finally, one can obtain the equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
b_{m}:=h\,e^{-imh}\frac{1}{h\,e^{-h^{2}}}=e^{-imh}e^{h^{2}}
\]

\end_inset

to compute the coefficients 
\begin_inset Formula $b_{m}$
\end_inset

 for 
\begin_inset Formula $f(x):=e^{ix}$
\end_inset

.
\end_layout

\begin_layout Subsection
Step B) Approximation of basis function
\end_layout

\begin_layout Standard
The second step is the approximation of the basis function 
\begin_inset Formula $\psi_{s}(x)$
\end_inset

 itself with a rational approximation, see 
\begin_inset CommandInset citation
LatexCommand cite
key "Near optimal rational approximations of large data sets"

\end_inset

.
 Our basis function is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\psi_{s}(x):=(4\pi)^{-\frac{1}{2}}e^{-x^{2}/(4s^{2})}
\]

\end_inset

and a close-to-optimal approximation of 
\begin_inset Formula $\psi_{1}(x)$
\end_inset

 with a sum of rational functions is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\psi_{1}(x)\approx Re\left(\sum_{l=-L}^{L}\frac{a_{l}}{ix+(\mu+i\,l)}\right)
\]

\end_inset

with the 
\begin_inset Formula $\mu$
\end_inset

 and 
\begin_inset Formula $a_{l}$
\end_inset

 given in 
\begin_inset CommandInset citation
LatexCommand cite
key "Near optimal rational approximations of large data sets"

\end_inset

, Table 1.
 We can generalise this approximation to arbitrary choosen 
\begin_inset Formula $s$
\end_inset

 via 
\begin_inset Formula 
\[
\psi_{s}(x)\approx Re\left(\sum_{l=-L}^{L}\frac{a_{l}}{i\frac{x}{s}+(\mu+i\,l)}\right)
\]

\end_inset


\end_layout

\begin_layout Subsection
Step C) Approximation of the approximation
\end_layout

\begin_layout Standard
We then combine the approximation (B) of the approximation (A), yielding
\begin_inset Formula 
\[
f(x)\approx\sum_{m=-M}^{M}c_{m}\psi_{s}(x+ms)=\sum_{m=-M}^{M}b_{m}Re\left(\sum_{l=-L}^{L}\frac{a_{l}}{i\frac{x+ms}{s}+(\mu+i\,l)}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{m=-M}^{M}b_{m}Re\left(\sum_{l=-L}^{L}\frac{a_{l}}{ix+s(\mu+i(m+l))}\right).
\]

\end_inset

We further like to simplify this equation and we observe, that for 
\begin_inset Formula $n:=n+l$
\end_inset

, the denominator is equal.
 We can hence express parts of the denomiator in terms of 
\begin_inset Formula $n:=n+l$
\end_inset

 by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\alpha_{n}:=s(\mu+in).
\]

\end_inset

Now, we merge the 
\begin_inset Formula $b_{m}$
\end_inset

 and 
\begin_inset Formula $a_{l}$
\end_inset

 coefficients and first have a look at the 
\begin_inset Formula $b_{m}$
\end_inset

 which is complex values.
 We observe the following property: Assuming that we want to compute the
 real value of 
\begin_inset Formula $f(x)$
\end_inset

, only the real value of 
\begin_inset Formula $b_{m}$
\end_inset

 has to be merged with the sum, since the imaginary component would be dropped
 afterwards.
 This allows us to move the 
\begin_inset Formula $Re(b_{m})$
\end_inset

 values inside the 
\begin_inset Formula $\sum_{L}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Re(f(x)):=Re\left(\sum_{m=-M}^{M}\,\,\sum_{l=-L}^{L}\frac{Re(b_{m})\,a_{l}}{ix+s(\mu+i(m+l))}\right).
\]

\end_inset

Now we can collect all nominators with equivalent denominator (if 
\begin_inset Formula $n=m+l$
\end_inset

), yielding
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\beta_{n}^{Re}:=\sum_{m=-M\,}^{M}\sum_{l=-L}^{L}Re(b_{m})a_{l}\delta(n=m+l)
\]

\end_inset

for real values 
\begin_inset Formula $f(x)$
\end_inset

 and
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\beta_{n}^{Im}:=\sum_{m=-M\,}^{M}\sum_{l=-L}^{L}Im(b_{m})a_{l}\delta(n=m+l)
\]

\end_inset

for complex values of 
\begin_inset Formula $f(x)$
\end_inset

.
 This finally leads us to the REXI approximation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
e^{ix}\approx\sum_{n=-N}^{N}Re\left(\frac{\beta_{n}^{Re}}{ix-\alpha_{n}}\right)+i\,Re\left(\frac{\beta_{n}^{Im}}{ix-\alpha_{n}}\right)
\]

\end_inset

for the complex-valued function 
\begin_inset Formula $e^{ix}$
\end_inset

.
\end_layout

\begin_layout Section
Apply REXI with a matrix:
\end_layout

\begin_layout Standard
Finally, we like to apply REXI to a formulation such as 
\begin_inset Formula 
\[
U(t):=e^{tL}U(0).
\]

\end_inset

To see the relationship between the approximation of 
\begin_inset Formula $e^{ix}$
\end_inset

 with REXI, we first rewrite the exponential formulation in terms of 
\begin_inset Formula $f(x):=e^{itx}$
\end_inset


\begin_inset Formula 
\[
f(L):=e^{tL}=\Sigma\Lambda\Sigma^{H}=\Sigma\left(\begin{array}{ccc}
...\\
 & e^{i\lambda_{n}t}\\
 &  & ...
\end{array}\right)\Sigma^{H}=\Sigma\,f(\lambda_{n})\,\Sigma^{H}
\]

\end_inset

with complex-valued exponentials on the eigenvalues.
 Hence, the accuracy of the exponential integrator on 
\begin_inset Formula $f(L)$
\end_inset

 only depends on the spectrum of the 
\begin_inset Formula $L$
\end_inset

 and allows to be applied in the same way as 
\begin_inset Formula $e^{ix}$
\end_inset

, but by replacing 
\begin_inset Formula $x$
\end_inset

 with the matrix 
\begin_inset Formula $L$
\end_inset

.
 For error bounds, we like to refer to 
\begin_inset CommandInset citation
LatexCommand cite
key "High-order time-parallel approximation of evolution operators"

\end_inset

.
\end_layout

\begin_layout Section
Filtering
\end_layout

\begin_layout Standard
todo: explain why this may be required
\end_layout

\begin_layout Section
REXI, our little dog
\end_layout

\begin_layout Standard
In the following, we use 
\begin_inset Formula $L:=\tau L'$
\end_inset

 and assume an a-priori fixed time step size, making a REXI approximation
 more efficient.
 Then, the REXI approximation is given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
exp(\tau L')\approx\sum_{k=-K}^{K}\beta_{k}(L-\alpha_{k})^{-1}\label{eq:rexi}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The coefficients 
\begin_inset Formula $\alpha_{k}$
\end_inset

 (corresponding to 
\begin_inset Formula $s(\mu+i\,n)$
\end_inset

 in step C for the one-dimensional formulation) can be precomputed or computed
 during program start.
 
\begin_inset Formula $\mu$
\end_inset

 is based on a one-dimensional approximation, see the paper, and the 
\begin_inset Formula $\alpha_{k}$
\end_inset

 can be interpreted as shifts of the rational approximations.
 The coefficients 
\begin_inset Formula $\beta_{k}$
\end_inset

 (corresponding to 
\begin_inset Formula $c_{n}$
\end_inset

 in step C) are describing the scaling of the basis function and are also
 constant and independent of the solution itself.
 Note, that for debugging purpose, their 
\emph on
imaginary values have to cancel out
\emph default
.
\end_layout

\begin_layout Standard
Note an important property (see Sec.
 3.3 in 
\begin_inset CommandInset citation
LatexCommand cite
key "High-order time-parallel approximation of evolution operators"

\end_inset

).
 There's an anti-symmetry in the 
\begin_inset Formula $\alpha_{i}$
\end_inset

 coefficients, which avoids computing half of the inverses:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\overline{(L-\alpha)^{-1}u_{0}}=(L-\overline{\alpha})^{-1}u_{0}
\]

\end_inset


\end_layout

\begin_layout Section
Computing inverse of 
\begin_inset Formula $(L-\alpha)^{-1}$
\end_inset


\end_layout

\begin_layout Standard
For computing the inverse, arbitrary solvers can be used.
 However we like to note, that 
\begin_inset Formula $\alpha$
\end_inset

 is a complex number.
 Hence, also the solvers have to support for solving in complex space.
 We still have to compute the inverse of 
\begin_inset Formula $(L-\alpha)$
\end_inset

 which can be very expensive if computing it.
 Here, we consider a specialization on the shallow-water equations given
 above with
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
L(U):=\left(\begin{array}{ccc}
 & H\delta_{x} & H\delta_{y}\\
g\delta_{x} &  & -f\\
g\delta_{y} & f
\end{array}\right)U
\]

\end_inset


\begin_inset Formula 
\[
U_{t}:=L(U)
\]

\end_inset

and we set 
\begin_inset Formula $g:=1$
\end_inset

 and the average height 
\begin_inset Formula $H:=1$
\end_inset

.
 [TODO (Pedro): Derive dimensional formulation].
 For the REXI method, we now have to solve the systems of equations given
 by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(L-\alpha).U=U0
\]

\end_inset

with 
\begin_inset Formula $U_{0}$
\end_inset

 the initial conditions.
 According to 
\begin_inset CommandInset citation
LatexCommand cite
key "An invariant theory of the linearized shallow water equations with rotation and its application to a sphere and a plane"

\end_inset

, instead of solving this relatively large system of equations we can split
 the problem into an elliptic one for the height which then allows to use
 an explicit formulation for the velocities.
 We use the abbreviation
\begin_inset Formula $\vec{v}:=(u,v)$
\end_inset

 in the following paragraph.
 Using the formulation in 
\begin_inset CommandInset citation
LatexCommand cite
key "High-order time-parallel approximation of evolution operators"

\end_inset

, the height can be computed with the elliptic equation given by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(\nabla^{2}-(\alpha^{2}+f^{2}))h(\tau)=\frac{\alpha^{2}+f^{2}}{\alpha}(h(0)+H\nabla\cdot(A.v(0))\label{eq:elliptic_height}
\end{equation}

\end_inset

with
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A:=\frac{1}{\alpha^{2}+f^{2}}\left(\begin{array}{cc}
\alpha & -f\\
f & \alpha
\end{array}\right).
\]

\end_inset

Assuming an f-plane approximation (f is constant), we can rearrange this
 equation by using the abbreviations 
\begin_inset Formula $κ:=\alpha^{2}+f^{2}$
\end_inset

 and 
\begin_inset Formula $\gamma:=\alpha^{-1}$
\end_inset

 in the following way:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(\nabla^{2}-κ)\,h(\tau)=\frac{κ}{\alpha}\left(h(0)+H\nabla\cdot(A.v(0)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(\nabla^{2}-κ)\,h(\tau)=\frac{κ}{\alpha}h(0)+\frac{1}{\alpha}H\nabla\cdot\left(\begin{array}{cc}
\alpha & -f\\
f & \alpha
\end{array}\right).v(0)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(\nabla^{2}-κ)\,h(\tau)=\frac{κ}{\alpha}h(0)+\frac{1}{\alpha}H\left(\begin{array}{cc}
\alpha & -f\\
f & \alpha
\end{array}\right)\nabla\cdot v(0)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(\nabla^{2}-κ)h(\tau)=\frac{κ}{\alpha}h(0)-\frac{Hf}{\alpha}\nabla\times v(0)+H\nabla\cdot v(0)
\end{equation}

\end_inset

Here, the 
\begin_inset Formula $\alpha$
\end_inset

 and 
\begin_inset Formula $\kappa$
\end_inset

 denote the terms with imaginary numbers and this formulation simplifies
 programming it.
 As an interpretation, on the right hand side we see an update-like scheme
 
\begin_inset Formula $h(0)$
\end_inset

 in the first scheme, then a vorticity-like formulation 
\begin_inset Formula $\times$
\end_inset

, and an advective part 
\begin_inset Formula $\nabla$
\end_inset

.
 To simplify the notation for solving the system, we rewrite it as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
(\nabla^{2}-κ)\,h(\tau)=D
\end{equation}

\end_inset

with real-and-imaginary-valued 
\begin_inset Formula $D$
\end_inset

 and 
\begin_inset Formula $\nabla^{2}-\kappa$
\end_inset

 as well as a real-and-imaginary-valued 
\begin_inset Formula $h(\tau)$
\end_inset

 for which we want to solve.
\end_layout

\begin_layout Standard
We like to solve this without operator support for imaginary values in Cartesian
 space (e.g.
 in SWEET).
 To do so, we reformulate the equation by 
\begin_inset Formula $K:=\nabla^{2}-\kappa$
\end_inset

 operator on 
\begin_inset Formula $D$
\end_inset

 can be written with the standard complex-number division rules and using
 
\begin_inset Formula $Re(K):=-Im(\nabla)^{2}-Re(K)$
\end_inset

 as well as 
\begin_inset Formula $Im(K):=-Im(\kappa)$
\end_inset

 as
\begin_inset Formula 
\[
denom:=Re(K)^{2}+Im(\kappa)^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
TODO: for sake of simplicity, the following part should be removed later
 on.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Re(DK^{-1})=\frac{Re(K)Re(D)+Im(K)Im(D)}{denom}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Im(DK^{-1})=\frac{Re(K)Im(D)-Im(K)Re(D)}{denom}
\]

\end_inset

and further 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Re(DK^{-1})=\frac{Re(K)Re(D)-Im(\kappa)Im(D)}{denom}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Im(DK^{-1})=\frac{Re(K)Im(D)+Im(\kappa)Re(D)}{denom}
\]

\end_inset

Once computed the height, the velocities can be directly computed via
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\vec{v}(\tau)=-A.\vec{v}(0)+A.\nabla h
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\vec{v}(\tau)=-A.\vec{(v}(0)-\nabla h)\label{eq:elliptic_velocity}
\end{equation}

\end_inset

giving us our final solution
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
U:=(h,v,u)^{T}.
\]

\end_inset

One final scaling has to be done: the exponential is computing 
\begin_inset Formula $e^{\tau L}$
\end_inset

, hence the real-valued 
\begin_inset Formula $\tau$
\end_inset

 has to be included in the operator 
\begin_inset Formula $L$
\end_inset

.
 There are basically two different ways: The first one is rescaling all
 parameters by 
\begin_inset Formula $\tau$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
g':=\tau g
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f':=\tau f
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
h_{0}':=\tau h_{0}
\]

\end_inset

The second way is to factor the 
\begin_inset Formula $\tau$
\end_inset

 parameter out:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(\tau L-\alpha).U(\tau)=U0
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
(L-\frac{\alpha}{\tau}).U(\tau)\tau=U0
\]

\end_inset

So instead of solving for 
\begin_inset Formula $U(\tau)$
\end_inset

, we are solving for 
\begin_inset Formula $U'(\tau):=U(\tau)\tau$
\end_inset

 as well as 
\begin_inset Formula $\alpha':=\frac{\alpha}{\tau}$
\end_inset

and have to divide the computed solution by 
\begin_inset Formula $\tau$
\end_inset

 in the end.
\end_layout

\begin_layout Section
Bringing everything together
\end_layout

\begin_layout Standard
Using the spectral methods (e.g.
 in SWEET), we can directly solve the height Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:elliptic_height"

\end_inset

 and then solver for the velocity in Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:elliptic_velocity"

\end_inset

.
 Then, the problem is reduced to computing the REXI as given in Eq.
 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:rexi"

\end_inset

.
 We like to note again, that the 
\begin_inset Formula $\alpha_{i}$
\end_inset

 and 
\begin_inset Formula $\beta$
\end_inset

 are independent of the system 
\begin_inset Formula $L$
\end_inset

 to solve, and the number of coefficients only depends on the accuracy and
 the resolution.
\end_layout

\begin_layout Section
Notes on HPC
\end_layout

\begin_layout Itemize
The terms in REXI to solve are all independent.
 Hence, for latency avoiding, the communication can be interleaved with
 computations.
\end_layout

\begin_layout Itemize
The iterative solvers are memory bound.
 Instead of computing 
\begin_inset Formula $c:=a*b$
\end_inset

 for the stencil operations, we could compute 
\begin_inset Formula $\vec{c}:=a\vec{b}$
\end_inset

 with 
\begin_inset Formula $a$
\end_inset

 one coefficient in the stencil.
 This allows vectorization over 
\begin_inset Formula $c$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 on accelerator cards with strided memory access.
\end_layout

\begin_layout Itemize
It is unknown which method is more efficient to solve the system of equations:
\end_layout

\begin_deeper
\begin_layout Itemize
iterative solvers have low memory access,
\end_layout

\begin_layout Itemize
inverting the system and storing it as a sparse matrix allows fast direct
 solving but can yield more memory access operations.
\end_layout

\end_deeper
\begin_layout Itemize
Splitting the solver into real and complex number would store them consecutively
 in memory.
 This has a potential to avoid non-strided memory access and using the same
 SIMD operations (Just a rough idea, TODO: check if this is really the case).
\end_layout

\begin_layout Section
Acknowledgements
\end_layout

\begin_layout Standard
Thanks to Pedro & Terry for the feedback & discussions!
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Formulations of the shallow-water equations"

\end_inset

Formulations of the shallow-water equations, M.
 Schreiber
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "High-order time-parallel approximation of evolution operators"

\end_inset

High-order time-parallel approximation of evolution operators, T.
 Haut et.
 al.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "An asymptotic parallel-in-time method for highly oscillatory PDEs"

\end_inset

An asymptotic parallel-in-time method for highly oscillatory PDEs, T.
 Haut et.
 al.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "An invariant theory of the linearized shallow water equations with rotation and its application to a sphere and a plane"

\end_inset

An invariant theory of the linearized shallow water equations with rotation
 and its application to a sphere and a plane, N.
 Paldor et.
 al.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Nineteen Dubious Ways to Compute the Exponential of a Matrix"

\end_inset

Nineteen Dubious Ways to Compute the Exponential of a Matrix, Twenty-Five
 Years Later, Cleve Moler and Charles Van Loan, SIAM review
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Near optimal rational approximations of large data sets"

\end_inset

Near optimal rational approximations of large data sets, Damle, A., Beylkin,
 G., Haut, T.
 S.
 & Monzon
\end_layout

\end_body
\end_document
